unit u_290; {version 2020-12-30}
{Reads star databases type .290}
{Minor adaptation, remove astap_main, add global variables, for use with Skychart}

{Copyright (C) 2017,2020 by Han Kleijn, www.hnsky.org
 email: han.k.. at...hnsky.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
}

{$mode delphi}

interface

uses
  Classes, SysUtils, math;


var
  database2         : array[0..(11*10)] of ansichar;{info star database, length 110 char equals 10x11 bytes}
  naam2             : string; {contains star designation after read for records size above 7}

  // skychart variables
  catalog_path      : string; {path to the .290 files}
  RA_290,DE_290,FOV_290,MAG_290,Bp_Rp_290: double;

const
   maxmag   : integer=999; {magnitude*10, limiting magnitude can be set lower for mouse click search}


// searchmode [S,T] specify S = screen update within FOV or T for full (designation text) database access.
// telescope_ra, telescope_dec [radians], contains to center position of the field of interest
// field_diameter [radians], FOV diameter of field of interest. This is ignored in searchmode=T}
// ra, dec [radians],   reported star position
// mag2 [magnitude*10]  reported star magnitude
// result [true/false]  if reported true more stars available. If false no more stars available
// extra outputs:
//          naam2,  string containing the star Tycho/UCAC4 designation for record size above 7
//          database2  : array[0..(11*10)] of ansichar;{text info star database used}
// preconditions:
//    procedure reset290index should be called before any read.
//   maxmag [magnitude*10], double variable which specifies the maximum magnitude to be read. This is typical used in HNSKY if a star designation needs to be reported after a mouse click on it

procedure reset290index;{call this procedure before start reading from the 290 files}
function readdatabase290(searchmode:char; telescope_ra,telescope_dec, field_diameter:double; var ra2,dec2, mag2, Bp_Rp : double): boolean;{star 290 file database search}


// The format of the 290 star databases is described in the HNSKY help file
//
// The sky is divided in 290 areas of equal surface except for the poles which are half of that size.
// The stars are stored in these 290 separate files and sorted from bright to faint. Each file starts with a header of 110 bytes of which the first part contains
// a textual description and the last byte contains the record size 5, 6, 7, 10 or 11 bytes.  The source of the utility program to make star databases is provided.
//
// The 290 area's:
// The areas are based on an mathematical method described in a paper of the PHILLIPS LABORATORY called "THE DIVISION OF A CIRCLE OR SPHERICAL SURFACE INTO EQUAL-AREA CELLS OR PIXELS"
// by Irving I. Gringorten Penelope J. Yepez on 30 June 1992
// First circles of constant declination are assumed. The first sphere segment defined by circle with number 1 has a height h1 from the pole and a surface of pi*sqr(h1).
// If the second circle of constant declination has a sphere segment with a height of 3*h1 then the surface area of the second sphere segment is nine times higher equal pi*sqr(3*h1).
// If the area between circle 1 en 2 is divided in 8 segments then these eight have the same area as the area of the first segment.
// The same is possible for the third circle by diving it in 16 segments, then in 24, 32, 40, 48, 56, 64 segments.
// The area of the third segment is pi*sqr(5*h1) so 25 times larger, where 25 equals 1+8+16. So the sphere segments have a height of h1, 3*h1, 5*h1, 7*h1.
// The height of h1=1-sin(declination). All areas are equal area but rectangle.
// In HNSKY all area's are a combination of two except for the polar areas to have a more square shape especially around the equator.
// The south pole is stored in file 0101.290 Area A2 and A3 are stored in file 02_01.290, area A4 and A5 are stored in file 0202.290.
// The distances between the circles is pretty constant and around 10 to 12 degrees. The distance between the area centres is around 15 degrees maximum.
// The declinations are calculated by arcsin (1-1/289), arcsin(1-(1+8)/289), arcsin (1-(1+8+16)/289), arcsin(1-(1+8+16+24)/289)...
//
//     	Ring 	declination 	declination     Areas 	HNSKY
//              minimum         maximum         equal   area's
//                                              size
//   	0-1 	-90 	        -85.23224404 	1 	1          {arcsin(1-1/289)}
//     	1-2 	-85.23224404 	-75.66348756 	8 	4          {arcsin(1-(1+8)/289)}
//	2-3 	-75.66348756 	-65.99286637 	16 	8          {arcsin (1-(1+8+16)/289)}
//	4-5 	-65.99286637 	-56.14497387 	24 	12
//	6-7 	-56.14497387 	-46.03163067 	32 	16
//	7-8 	-46.03163067 	-35.54307745 	40 	20
//	8-9 	-35.54307745 	-24.53348115 	48 	24
//	7-8 	-24.53348115 	-12.79440589 	56 	28
//	8-9 	-12.79440589 	0 	        64 	32
//	9-10 	0 	        12.79440589 	64 	32
//	10-11 	12.79440589 	24.53348115 	56 	28
//	11-12 	24.53348115 	35.54307745 	48 	24
//	12-13 	35.54307745 	46.03163067 	40 	20
//	13-14 	46.03163067 	56.14497387 	32 	16
//	14-15 	56.14497387 	65.99286637 	24 	12
//	15-16 	65.99286637 	75.66348756 	16 	8
//	16-17 	75.66348756 	85.23224404 	8 	4
//	17-18 	85.23224404 	90 	        1 	1
//    ----------------------------------------------------
//                              Total   	578 	290

type
  hnskyhdr290_11 = packed record {This format is normally not used. Sometimes used for unsorted databases}
             nr32: integer; {Star number containing the Tycho/GSC or UCAC4 designation}
             ra7 : byte;    {The RA is stored as a 3 bytes word. The DEC position is stored as a two's complement (=standard), three bytes integer. The resolution of this three byte storage will be for RA: 360*60*60/((256*256*256)-1) = 0.077 arc seconds. For the DEC value it will be: 90*60*60/((128*256*256)-1) = 0.039 arc seconds.}
             ra8 : byte;
             ra9 : byte;
             dec7: byte;
             dec8: byte;    {note with word and smallint, delphi makes longer records !!!}
             dec9: shortint;
             mag0: shortint;

   end;

{Magnitude: The stars are sorted with an accuracy of 0.1 magnitude. Prior to each group a special record is written where RA is $FFFFFF and DEC contains the magnitude}
type
  hnskyhdr290_10 = packed record {This format is used for the Tycho2++ database up to magnitude 12.5}
             nr32: integer; {Star number containing the Tycho/GSC or UCAC4 designation}
             ra7 : byte;
             ra8 : byte;
             ra9 : byte;
             dec7: byte;
             dec8: byte;
             dec9: shortint;
   end;
  hnskyhdr290_9 = packed record  {Used TUC, for Tycho & UCAC4 database up to magnitude 15}
             nr32: integer; {Star number containing the Tycho/GSC or UCAC4 designation}
             ra7 : byte;
             ra8 : byte;
             ra9 : byte;
             dec7: byte;
             dec8: byte;
   end;

  hnskyhdr290_6 = packed record  {G16 for storing Bp-Rp}
             ra7 : byte; {The RA is stored as a 3 bytes word. The DEC position is stored as a two's complement (=standard), three bytes integer. The resolution of this three byte storage will be for RA: 360*60*60/((256*256*256)-1) = 0.077 arc seconds. For the DEC value it will be: 90*60*60/((128*256*256)-1) = 0.039 arc seconds.}
             ra8 : byte;
             ra9 : byte;
             dec7: byte;
             dec8: byte;
             b_r : shortint;{Gaia Bp-Rp}
   end;
  hnskyhdr290_5 = packed record  {Most compact format, used for Gaia}
              ra7 : byte;
              ra8 : byte;
              ra9 : byte;
              dec7: byte;
              dec8: byte;
    end;



var
  nr_records             : integer;
  name_star              : string;
  files_available        : boolean;

const
  file_open: integer=0;
  area2    : double=1*pi/180; {search area}

implementation


Const
AA=-90.0 * pi/180;
BB=-85.23224404 * pi/180;
CC=-75.66348756 * pi/180;
DD=-65.99286637 * pi/180;
EE=-56.14497387 * pi/180;
FF=-46.03163067 * pi/180;
GG=-35.54307745 * pi/180;
HH=-24.53348115 * pi/180;
II=-12.79440589 * pi/180;
JJ=  0;
KK=+12.79440589 * pi/180;
LL=+24.53348115 * pi/180;
MM=+35.54307745 * pi/180;
NN=+46.03163067 * pi/180;
OO=+56.14497387 * pi/180;
PP=+65.99286637 * pi/180;
QQ=+75.66348756 * pi/180;
RR=+85.23224404 * pi/180;
SS=+90.0 * pi/180;


centers290 : array[1..290,1..6] of real= {divide sky in 290 area's in bands of constant DEC}

 {ra_center, dec_center, ra_min    ,ra_max, dec_max, dec_min}

 (( 0       , +AA       ,  0        ,pi         ,AA,BB ),  {1  south pole }

 (0.5/4*2*pi, (BB+CC)/2, 0.0/4*2*pi, 1.0/4*2*pi,BB,CC),  {4 circle segments}
 (1.5/4*2*pi, (BB+CC)/2, 1.0/4*2*pi, 2.0/4*2*pi,BB,CC),
 (2.5/4*2*pi, (BB+CC)/2, 2.0/4*2*pi, 3.0/4*2*pi,BB,CC),
 (3.5/4*2*pi, (BB+CC)/2, 3.0/4*2*pi, 4.0/4*2*pi,BB,CC),

 (0.5/8*2*pi, (CC+DD)/2, 0.0/8*2*pi, 1.0/8*2*pi,CC,DD),  {8 circel segments}
 (1.5/8*2*pi, (CC+DD)/2, 1.0/8*2*pi, 2.0/8*2*pi,CC,DD),
 (2.5/8*2*pi, (CC+DD)/2, 2.0/8*2*pi, 3.0/8*2*pi,CC,DD),
 (3.5/8*2*pi, (CC+DD)/2, 3.0/8*2*pi, 4.0/8*2*pi,CC,DD),
 (4.5/8*2*pi, (CC+DD)/2, 4.0/8*2*pi, 5.0/8*2*pi,CC,DD),
 (5.5/8*2*pi, (CC+DD)/2, 5.0/8*2*pi, 6.0/8*2*pi,CC,DD),
 (6.5/8*2*pi, (CC+DD)/2, 6.0/8*2*pi, 7.0/8*2*pi,CC,DD),
 (7.5/8*2*pi, (CC+DD)/2, 7.0/8*2*pi, 8.0/8*2*pi,CC,DD),

 (0.5/12*2*pi, (DD+EE)/2, 0.0/12*2*pi, 1.0/12*2*pi,DD,EE),  {12 circle segments}
 (1.5/12*2*pi, (DD+EE)/2, 1.0/12*2*pi, 2.0/12*2*pi,DD,EE),
 (2.5/12*2*pi, (DD+EE)/2, 2.0/12*2*pi, 3.0/12*2*pi,DD,EE),
 (3.5/12*2*pi, (DD+EE)/2, 3.0/12*2*pi, 4.0/12*2*pi,DD,EE),
 (4.5/12*2*pi, (DD+EE)/2, 4.0/12*2*pi, 5.0/12*2*pi,DD,EE),
 (5.5/12*2*pi, (DD+EE)/2, 5.0/12*2*pi, 6.0/12*2*pi,DD,EE),
 (6.5/12*2*pi, (DD+EE)/2, 6.0/12*2*pi, 7.0/12*2*pi,DD,EE),
 (7.5/12*2*pi, (DD+EE)/2, 7.0/12*2*pi, 8.0/12*2*pi,DD,EE),
 (8.5/12*2*pi, (DD+EE)/2, 8.0/12*2*pi, 9.0/12*2*pi,DD,EE),
 (9.5/12*2*pi, (DD+EE)/2, 9.0/12*2*pi, 10.0/12*2*pi,DD,EE),
 (10.5/12*2*pi, (DD+EE)/2, 10.0/12*2*pi, 11.0/12*2*pi,DD,EE),
 (11.5/12*2*pi, (DD+EE)/2, 11.0/12*2*pi, 12.0/12*2*pi,DD,EE),

 (0.5/16*2*pi, (EE+FF)/2, 0.0/16*2*pi, 1.0/16*2*pi,EE,FF),  {16 circel segments}
 (1.5/16*2*pi, (EE+FF)/2, 1.0/16*2*pi, 2.0/16*2*pi,EE,FF),
 (2.5/16*2*pi, (EE+FF)/2, 2.0/16*2*pi, 3.0/16*2*pi,EE,FF),
 (3.5/16*2*pi, (EE+FF)/2, 3.0/16*2*pi, 4.0/16*2*pi,EE,FF),
 (4.5/16*2*pi, (EE+FF)/2, 4.0/16*2*pi, 5.0/16*2*pi,EE,FF),
 (5.5/16*2*pi, (EE+FF)/2, 5.0/16*2*pi, 6.0/16*2*pi,EE,FF),
 (6.5/16*2*pi, (EE+FF)/2, 6.0/16*2*pi, 7.0/16*2*pi,EE,FF),
 (7.5/16*2*pi, (EE+FF)/2, 7.0/16*2*pi, 8.0/16*2*pi,EE,FF),
 (8.5/16*2*pi, (EE+FF)/2, 8.0/16*2*pi, 9.0/16*2*pi,EE,FF),
 (9.5/16*2*pi, (EE+FF)/2, 9.0/16*2*pi, 10.0/16*2*pi,EE,FF),
 (10.5/16*2*pi, (EE+FF)/2, 10.0/16*2*pi, 11.0/16*2*pi,EE,FF),
 (11.5/16*2*pi, (EE+FF)/2, 11.0/16*2*pi, 12.0/16*2*pi,EE,FF),
 (12.5/16*2*pi, (EE+FF)/2, 12.0/16*2*pi, 13.0/16*2*pi,EE,FF),
 (13.5/16*2*pi, (EE+FF)/2, 13.0/16*2*pi, 14.0/16*2*pi,EE,FF),
 (14.5/16*2*pi, (EE+FF)/2, 14.0/16*2*pi, 15.0/16*2*pi,EE,FF),
 (15.5/16*2*pi, (EE+FF)/2, 15.0/16*2*pi, 16.0/16*2*pi,EE,FF),

 (0.5/20*2*pi, (FF+GG)/2, 0.0/20*2*pi, 1.0/20*2*pi,FF,GG),  {20 circle segments}
 (1.5/20*2*pi, (FF+GG)/2, 1.0/20*2*pi, 2.0/20*2*pi,FF,GG),
 (2.5/20*2*pi, (FF+GG)/2, 2.0/20*2*pi, 3.0/20*2*pi,FF,GG),
 (3.5/20*2*pi, (FF+GG)/2, 3.0/20*2*pi, 4.0/20*2*pi,FF,GG),
 (4.5/20*2*pi, (FF+GG)/2, 4.0/20*2*pi, 5.0/20*2*pi,FF,GG),
 (5.5/20*2*pi, (FF+GG)/2, 5.0/20*2*pi, 6.0/20*2*pi,FF,GG),
 (6.5/20*2*pi, (FF+GG)/2, 6.0/20*2*pi, 7.0/20*2*pi,FF,GG),
 (7.5/20*2*pi, (FF+GG)/2, 7.0/20*2*pi, 8.0/20*2*pi,FF,GG),
 (8.5/20*2*pi, (FF+GG)/2, 8.0/20*2*pi, 9.0/20*2*pi,FF,GG),
 (9.5/20*2*pi, (FF+GG)/2, 9.0/20*2*pi, 10.0/20*2*pi,FF,GG),
 (10.5/20*2*pi, (FF+GG)/2, 10.0/20*2*pi, 11.0/20*2*pi,FF,GG),
 (11.5/20*2*pi, (FF+GG)/2, 11.0/20*2*pi, 12.0/20*2*pi,FF,GG),
 (12.5/20*2*pi, (FF+GG)/2, 12.0/20*2*pi, 13.0/20*2*pi,FF,GG),
 (13.5/20*2*pi, (FF+GG)/2, 13.0/20*2*pi, 14.0/20*2*pi,FF,GG),
 (14.5/20*2*pi, (FF+GG)/2, 14.0/20*2*pi, 15.0/20*2*pi,FF,GG),
 (15.5/20*2*pi, (FF+GG)/2, 15.0/20*2*pi, 16.0/20*2*pi,FF,GG),
 (16.5/20*2*pi, (FF+GG)/2, 16.0/20*2*pi, 17.0/20*2*pi,FF,GG),
 (17.5/20*2*pi, (FF+GG)/2, 17.0/20*2*pi, 18.0/20*2*pi,FF,GG),
 (18.5/20*2*pi, (FF+GG)/2, 18.0/20*2*pi, 19.0/20*2*pi,FF,GG),
 (19.5/20*2*pi, (FF+GG)/2, 19.0/20*2*pi, 20.0/20*2*pi,FF,GG),

 (0.5/24*2*pi, (GG+HH)/2, 0.0/24*2*pi, 1.0/24*2*pi,GG,HH),  {24circle segments}
 (1.5/24*2*pi, (GG+HH)/2, 1.0/24*2*pi, 2.0/24*2*pi,GG,HH),
 (2.5/24*2*pi, (GG+HH)/2, 2.0/24*2*pi, 3.0/24*2*pi,GG,HH),
 (3.5/24*2*pi, (GG+HH)/2, 3.0/24*2*pi, 4.0/24*2*pi,GG,HH),
 (4.5/24*2*pi, (GG+HH)/2, 4.0/24*2*pi, 5.0/24*2*pi,GG,HH),
 (5.5/24*2*pi, (GG+HH)/2, 5.0/24*2*pi, 6.0/24*2*pi,GG,HH),
 (6.5/24*2*pi, (GG+HH)/2, 6.0/24*2*pi, 7.0/24*2*pi,GG,HH),
 (7.5/24*2*pi, (GG+HH)/2, 7.0/24*2*pi, 8.0/24*2*pi,GG,HH),
 (8.5/24*2*pi, (GG+HH)/2, 8.0/24*2*pi, 9.0/24*2*pi,GG,HH),
 (9.5/24*2*pi, (GG+HH)/2, 9.0/24*2*pi, 10.0/24*2*pi,GG,HH),
 (10.5/24*2*pi, (GG+HH)/2, 10.0/24*2*pi, 11.0/24*2*pi,GG,HH),
 (11.5/24*2*pi, (GG+HH)/2, 11.0/24*2*pi, 12.0/24*2*pi,GG,HH),
 (12.5/24*2*pi, (GG+HH)/2, 12.0/24*2*pi, 13.0/24*2*pi,GG,HH),
 (13.5/24*2*pi, (GG+HH)/2, 13.0/24*2*pi, 14.0/24*2*pi,GG,HH),
 (14.5/24*2*pi, (GG+HH)/2, 14.0/24*2*pi, 15.0/24*2*pi,GG,HH),
 (15.5/24*2*pi, (GG+HH)/2, 15.0/24*2*pi, 16.0/24*2*pi,GG,HH),
 (16.5/24*2*pi, (GG+HH)/2, 16.0/24*2*pi, 17.0/24*2*pi,GG,HH),
 (17.5/24*2*pi, (GG+HH)/2, 17.0/24*2*pi, 18.0/24*2*pi,GG,HH),
 (18.5/24*2*pi, (GG+HH)/2, 18.0/24*2*pi, 19.0/24*2*pi,GG,HH),
 (19.5/24*2*pi, (GG+HH)/2, 19.0/24*2*pi, 20.0/24*2*pi,GG,HH),
 (20.5/24*2*pi, (GG+HH)/2, 20.0/24*2*pi, 21.0/24*2*pi,GG,HH),
 (21.5/24*2*pi, (GG+HH)/2, 21.0/24*2*pi, 22.0/24*2*pi,GG,HH),
 (22.5/24*2*pi, (GG+HH)/2, 22.0/24*2*pi, 23.0/24*2*pi,GG,HH),
 (23.5/24*2*pi, (GG+HH)/2, 23.0/24*2*pi, 24.0/24*2*pi,GG,HH),


 (0.5/28*2*pi, (HH+II)/2, 0.0/28*2*pi, 1.0/28*2*pi,HH,II),  {28 circle segments}
 (1.5/28*2*pi, (HH+II)/2, 1.0/28*2*pi, 2.0/28*2*pi,HH,II),
 (2.5/28*2*pi, (HH+II)/2, 2.0/28*2*pi, 3.0/28*2*pi,HH,II),
 (3.5/28*2*pi, (HH+II)/2, 3.0/28*2*pi, 4.0/28*2*pi,HH,II),
 (4.5/28*2*pi, (HH+II)/2, 4.0/28*2*pi, 5.0/28*2*pi,HH,II),
 (5.5/28*2*pi, (HH+II)/2, 5.0/28*2*pi, 6.0/28*2*pi,HH,II),
 (6.5/28*2*pi, (HH+II)/2, 6.0/28*2*pi, 7.0/28*2*pi,HH,II),
 (7.5/28*2*pi, (HH+II)/2, 7.0/28*2*pi, 8.0/28*2*pi,HH,II),
 (8.5/28*2*pi, (HH+II)/2, 8.0/28*2*pi, 9.0/28*2*pi,HH,II),
 (9.5/28*2*pi, (HH+II)/2, 9.0/28*2*pi, 10.0/28*2*pi,HH,II),
 (10.5/28*2*pi, (HH+II)/2, 10.0/28*2*pi, 11.0/28*2*pi,HH,II),
 (11.5/28*2*pi, (HH+II)/2, 11.0/28*2*pi, 12.0/28*2*pi,HH,II),
 (12.5/28*2*pi, (HH+II)/2, 12.0/28*2*pi, 13.0/28*2*pi,HH,II),
 (13.5/28*2*pi, (HH+II)/2, 13.0/28*2*pi, 14.0/28*2*pi,HH,II),
 (14.5/28*2*pi, (HH+II)/2, 14.0/28*2*pi, 15.0/28*2*pi,HH,II),
 (15.5/28*2*pi, (HH+II)/2, 15.0/28*2*pi, 16.0/28*2*pi,HH,II),
 (16.5/28*2*pi, (HH+II)/2, 16.0/28*2*pi, 17.0/28*2*pi,HH,II),
 (17.5/28*2*pi, (HH+II)/2, 17.0/28*2*pi, 18.0/28*2*pi,HH,II),
 (18.5/28*2*pi, (HH+II)/2, 18.0/28*2*pi, 19.0/28*2*pi,HH,II),
 (19.5/28*2*pi, (HH+II)/2, 19.0/28*2*pi, 20.0/28*2*pi,HH,II),
 (20.5/28*2*pi, (HH+II)/2, 20.0/28*2*pi, 21.0/28*2*pi,HH,II),
 (21.5/28*2*pi, (HH+II)/2, 21.0/28*2*pi, 22.0/28*2*pi,HH,II),
 (22.5/28*2*pi, (HH+II)/2, 22.0/28*2*pi, 23.0/28*2*pi,HH,II),
 (23.5/28*2*pi, (HH+II)/2, 23.0/28*2*pi, 24.0/28*2*pi,HH,II),
 (24.5/28*2*pi, (HH+II)/2, 24.0/28*2*pi, 25.0/28*2*pi,HH,II),
 (25.5/28*2*pi, (HH+II)/2, 25.0/28*2*pi, 26.0/28*2*pi,HH,II),
 (26.5/28*2*pi, (HH+II)/2, 26.0/28*2*pi, 27.0/28*2*pi,HH,II),
 (27.5/28*2*pi, (HH+II)/2, 27.0/28*2*pi, 28.0/28*2*pi,HH,II),

 (0.5/32*2*pi, (II+JJ)/2, 0.0/32*2*pi, 1.0/32*2*pi,II,JJ),  {32 circle segments}
 (1.5/32*2*pi, (II+JJ)/2, 1.0/32*2*pi, 2.0/32*2*pi,II,JJ),
 (2.5/32*2*pi, (II+JJ)/2, 2.0/32*2*pi, 3.0/32*2*pi,II,JJ),
 (3.5/32*2*pi, (II+JJ)/2, 3.0/32*2*pi, 4.0/32*2*pi,II,JJ),
 (4.5/32*2*pi, (II+JJ)/2, 4.0/32*2*pi, 5.0/32*2*pi,II,JJ),
 (5.5/32*2*pi, (II+JJ)/2, 5.0/32*2*pi, 6.0/32*2*pi,II,JJ),
 (6.5/32*2*pi, (II+JJ)/2, 6.0/32*2*pi, 7.0/32*2*pi,II,JJ),
 (7.5/32*2*pi, (II+JJ)/2, 7.0/32*2*pi, 8.0/32*2*pi,II,JJ),
 (8.5/32*2*pi, (II+JJ)/2, 8.0/32*2*pi, 9.0/32*2*pi,II,JJ),
 (9.5/32*2*pi, (II+JJ)/2, 9.0/32*2*pi, 10.0/32*2*pi,II,JJ),
 (10.5/32*2*pi, (II+JJ)/2, 10.0/32*2*pi, 11.0/32*2*pi,II,JJ),
 (11.5/32*2*pi, (II+JJ)/2, 11.0/32*2*pi, 12.0/32*2*pi,II,JJ),
 (12.5/32*2*pi, (II+JJ)/2, 12.0/32*2*pi, 13.0/32*2*pi,II,JJ),
 (13.5/32*2*pi, (II+JJ)/2, 13.0/32*2*pi, 14.0/32*2*pi,II,JJ),
 (14.5/32*2*pi, (II+JJ)/2, 14.0/32*2*pi, 15.0/32*2*pi,II,JJ),
 (15.5/32*2*pi, (II+JJ)/2, 15.0/32*2*pi, 16.0/32*2*pi,II,JJ),
 (16.5/32*2*pi, (II+JJ)/2, 16.0/32*2*pi, 17.0/32*2*pi,II,JJ),
 (17.5/32*2*pi, (II+JJ)/2, 17.0/32*2*pi, 18.0/32*2*pi,II,JJ),
 (18.5/32*2*pi, (II+JJ)/2, 18.0/32*2*pi, 19.0/32*2*pi,II,JJ),
 (19.5/32*2*pi, (II+JJ)/2, 19.0/32*2*pi, 20.0/32*2*pi,II,JJ),
 (20.5/32*2*pi, (II+JJ)/2, 20.0/32*2*pi, 21.0/32*2*pi,II,JJ),
 (21.5/32*2*pi, (II+JJ)/2, 21.0/32*2*pi, 22.0/32*2*pi,II,JJ),
 (22.5/32*2*pi, (II+JJ)/2, 22.0/32*2*pi, 23.0/32*2*pi,II,JJ),
 (23.5/32*2*pi, (II+JJ)/2, 23.0/32*2*pi, 24.0/32*2*pi,II,JJ),
 (24.5/32*2*pi, (II+JJ)/2, 24.0/32*2*pi, 25.0/32*2*pi,II,JJ),
 (25.5/32*2*pi, (II+JJ)/2, 25.0/32*2*pi, 26.0/32*2*pi,II,JJ),
 (26.5/32*2*pi, (II+JJ)/2, 26.0/32*2*pi, 27.0/32*2*pi,II,JJ),
 (27.5/32*2*pi, (II+JJ)/2, 27.0/32*2*pi, 28.0/32*2*pi,II,JJ),
 (28.5/32*2*pi, (II+JJ)/2, 28.0/32*2*pi, 29.0/32*2*pi,II,JJ),
 (29.5/32*2*pi, (II+JJ)/2, 29.0/32*2*pi, 30.0/32*2*pi,II,JJ),
 (30.5/32*2*pi, (II+JJ)/2, 30.0/32*2*pi, 31.0/32*2*pi,II,JJ),
 (31.5/32*2*pi, (II+JJ)/2, 31.0/32*2*pi, 32.0/32*2*pi,II,JJ),

 (0.5/32*2*pi, -(II+JJ)/2, 0.0/32*2*pi, 1.0/32*2*pi,-II,JJ),  {32 circle segments}
 (1.5/32*2*pi, -(II+JJ)/2, 1.0/32*2*pi, 2.0/32*2*pi,-II,JJ),
 (2.5/32*2*pi, -(II+JJ)/2, 2.0/32*2*pi, 3.0/32*2*pi,-II,JJ),
 (3.5/32*2*pi, -(II+JJ)/2, 3.0/32*2*pi, 4.0/32*2*pi,-II,JJ),
 (4.5/32*2*pi, -(II+JJ)/2, 4.0/32*2*pi, 5.0/32*2*pi,-II,JJ),
 (5.5/32*2*pi, -(II+JJ)/2, 5.0/32*2*pi, 6.0/32*2*pi,-II,JJ),
 (6.5/32*2*pi, -(II+JJ)/2, 6.0/32*2*pi, 7.0/32*2*pi,-II,JJ),
 (7.5/32*2*pi, -(II+JJ)/2, 7.0/32*2*pi, 8.0/32*2*pi,-II,JJ),
 (8.5/32*2*pi, -(II+JJ)/2, 8.0/32*2*pi, 9.0/32*2*pi,-II,JJ),
 (9.5/32*2*pi, -(II+JJ)/2, 9.0/32*2*pi, 10.0/32*2*pi,-II,JJ),
 (10.5/32*2*pi, -(II+JJ)/2, 10.0/32*2*pi, 11.0/32*2*pi,-II,JJ),
 (11.5/32*2*pi, -(II+JJ)/2, 11.0/32*2*pi, 12.0/32*2*pi,-II,JJ),
 (12.5/32*2*pi, -(II+JJ)/2, 12.0/32*2*pi, 13.0/32*2*pi,-II,JJ),
 (13.5/32*2*pi, -(II+JJ)/2, 13.0/32*2*pi, 14.0/32*2*pi,-II,JJ),
 (14.5/32*2*pi, -(II+JJ)/2, 14.0/32*2*pi, 15.0/32*2*pi,-II,JJ),
 (15.5/32*2*pi, -(II+JJ)/2, 15.0/32*2*pi, 16.0/32*2*pi,-II,JJ),
 (16.5/32*2*pi, -(II+JJ)/2, 16.0/32*2*pi, 17.0/32*2*pi,-II,JJ),
 (17.5/32*2*pi, -(II+JJ)/2, 17.0/32*2*pi, 18.0/32*2*pi,-II,JJ),
 (18.5/32*2*pi, -(II+JJ)/2, 18.0/32*2*pi, 19.0/32*2*pi,-II,JJ),
 (19.5/32*2*pi, -(II+JJ)/2, 19.0/32*2*pi, 20.0/32*2*pi,-II,JJ),
 (20.5/32*2*pi, -(II+JJ)/2, 20.0/32*2*pi, 21.0/32*2*pi,-II,JJ),
 (21.5/32*2*pi, -(II+JJ)/2, 21.0/32*2*pi, 22.0/32*2*pi,-II,JJ),
 (22.5/32*2*pi, -(II+JJ)/2, 22.0/32*2*pi, 23.0/32*2*pi,-II,JJ),
 (23.5/32*2*pi, -(II+JJ)/2, 23.0/32*2*pi, 24.0/32*2*pi,-II,JJ),
 (24.5/32*2*pi, -(II+JJ)/2, 24.0/32*2*pi, 25.0/32*2*pi,-II,JJ),
 (25.5/32*2*pi, -(II+JJ)/2, 25.0/32*2*pi, 26.0/32*2*pi,-II,JJ),
 (26.5/32*2*pi, -(II+JJ)/2, 26.0/32*2*pi, 27.0/32*2*pi,-II,JJ),
 (27.5/32*2*pi, -(II+JJ)/2, 27.0/32*2*pi, 28.0/32*2*pi,-II,JJ),
 (28.5/32*2*pi, -(II+JJ)/2, 28.0/32*2*pi, 29.0/32*2*pi,-II,JJ),
 (29.5/32*2*pi, -(II+JJ)/2, 29.0/32*2*pi, 30.0/32*2*pi,-II,JJ),
 (30.5/32*2*pi, -(II+JJ)/2, 30.0/32*2*pi, 31.0/32*2*pi,-II,JJ),
 (31.5/32*2*pi, -(II+JJ)/2, 31.0/32*2*pi, 32.0/32*2*pi,-II,JJ),

 (0.5/28*2*pi, -(HH+II)/2, 0.0/28*2*pi, 1.0/28*2*pi,-HH,-II),  {28 circle segments}
 (1.5/28*2*pi, -(HH+II)/2, 1.0/28*2*pi, 2.0/28*2*pi,-HH,-II),
 (2.5/28*2*pi, -(HH+II)/2, 2.0/28*2*pi, 3.0/28*2*pi,-HH,-II),
 (3.5/28*2*pi, -(HH+II)/2, 3.0/28*2*pi, 4.0/28*2*pi,-HH,-II),
 (4.5/28*2*pi, -(HH+II)/2, 4.0/28*2*pi, 5.0/28*2*pi,-HH,-II),
 (5.5/28*2*pi, -(HH+II)/2, 5.0/28*2*pi, 6.0/28*2*pi,-HH,-II),
 (6.5/28*2*pi, -(HH+II)/2, 6.0/28*2*pi, 7.0/28*2*pi,-HH,-II),
 (7.5/28*2*pi, -(HH+II)/2, 7.0/28*2*pi, 8.0/28*2*pi,-HH,-II),
 (8.5/28*2*pi, -(HH+II)/2, 8.0/28*2*pi, 9.0/28*2*pi,-HH,-II),
 (9.5/28*2*pi, -(HH+II)/2, 9.0/28*2*pi, 10.0/28*2*pi,-HH,-II),
 (10.5/28*2*pi, -(HH+II)/2, 10.0/28*2*pi, 11.0/28*2*pi,-HH,-II),
 (11.5/28*2*pi, -(HH+II)/2, 11.0/28*2*pi, 12.0/28*2*pi,-HH,-II),
 (12.5/28*2*pi, -(HH+II)/2, 12.0/28*2*pi, 13.0/28*2*pi,-HH,-II),
 (13.5/28*2*pi, -(HH+II)/2, 13.0/28*2*pi, 14.0/28*2*pi,-HH,-II),
 (14.5/28*2*pi, -(HH+II)/2, 14.0/28*2*pi, 15.0/28*2*pi,-HH,-II),
 (15.5/28*2*pi, -(HH+II)/2, 15.0/28*2*pi, 16.0/28*2*pi,-HH,-II),
 (16.5/28*2*pi, -(HH+II)/2, 16.0/28*2*pi, 17.0/28*2*pi,-HH,-II),
 (17.5/28*2*pi, -(HH+II)/2, 17.0/28*2*pi, 18.0/28*2*pi,-HH,-II),
 (18.5/28*2*pi, -(HH+II)/2, 18.0/28*2*pi, 19.0/28*2*pi,-HH,-II),
 (19.5/28*2*pi, -(HH+II)/2, 19.0/28*2*pi, 20.0/28*2*pi,-HH,-II),
 (20.5/28*2*pi, -(HH+II)/2, 20.0/28*2*pi, 21.0/28*2*pi,-HH,-II),
 (21.5/28*2*pi, -(HH+II)/2, 21.0/28*2*pi, 22.0/28*2*pi,-HH,-II),
 (22.5/28*2*pi, -(HH+II)/2, 22.0/28*2*pi, 23.0/28*2*pi,-HH,-II),
 (23.5/28*2*pi, -(HH+II)/2, 23.0/28*2*pi, 24.0/28*2*pi,-HH,-II),
 (24.5/28*2*pi, -(HH+II)/2, 24.0/28*2*pi, 25.0/28*2*pi,-HH,-II),
 (25.5/28*2*pi, -(HH+II)/2, 25.0/28*2*pi, 26.0/28*2*pi,-HH,-II),
 (26.5/28*2*pi, -(HH+II)/2, 26.0/28*2*pi, 27.0/28*2*pi,-HH,-II),
 (27.5/28*2*pi, -(HH+II)/2, 27.0/28*2*pi, 28.0/28*2*pi,-HH,-II),

 (0.5/24*2*pi, -(GG+HH)/2, 0.0/24*2*pi, 1.0/24*2*pi,-GG,-HH),  {24 circle segments}
 (1.5/24*2*pi, -(GG+HH)/2, 1.0/24*2*pi, 2.0/24*2*pi,-GG,-HH),
 (2.5/24*2*pi, -(GG+HH)/2, 2.0/24*2*pi, 3.0/24*2*pi,-GG,-HH),
 (3.5/24*2*pi, -(GG+HH)/2, 3.0/24*2*pi, 4.0/24*2*pi,-GG,-HH),
 (4.5/24*2*pi, -(GG+HH)/2, 4.0/24*2*pi, 5.0/24*2*pi,-GG,-HH),
 (5.5/24*2*pi, -(GG+HH)/2, 5.0/24*2*pi, 6.0/24*2*pi,-GG,-HH),
 (6.5/24*2*pi, -(GG+HH)/2, 6.0/24*2*pi, 7.0/24*2*pi,-GG,-HH),
 (7.5/24*2*pi, -(GG+HH)/2, 7.0/24*2*pi, 8.0/24*2*pi,-GG,-HH),
 (8.5/24*2*pi, -(GG+HH)/2, 8.0/24*2*pi, 9.0/24*2*pi,-GG,-HH),
 (9.5/24*2*pi, -(GG+HH)/2, 9.0/24*2*pi, 10.0/24*2*pi,-GG,-HH),
 (10.5/24*2*pi, -(GG+HH)/2, 10.0/24*2*pi, 11.0/24*2*pi,-GG,-HH),
 (11.5/24*2*pi, -(GG+HH)/2, 11.0/24*2*pi, 12.0/24*2*pi,-GG,-HH),
 (12.5/24*2*pi, -(GG+HH)/2, 12.0/24*2*pi, 13.0/24*2*pi,-GG,-HH),
 (13.5/24*2*pi, -(GG+HH)/2, 13.0/24*2*pi, 14.0/24*2*pi,-GG,-HH),
 (14.5/24*2*pi, -(GG+HH)/2, 14.0/24*2*pi, 15.0/24*2*pi,-GG,-HH),
 (15.5/24*2*pi, -(GG+HH)/2, 15.0/24*2*pi, 16.0/24*2*pi,-GG,-HH),
 (16.5/24*2*pi, -(GG+HH)/2, 16.0/24*2*pi, 17.0/24*2*pi,-GG,-HH),
 (17.5/24*2*pi, -(GG+HH)/2, 17.0/24*2*pi, 18.0/24*2*pi,-GG,-HH),
 (18.5/24*2*pi, -(GG+HH)/2, 18.0/24*2*pi, 19.0/24*2*pi,-GG,-HH),
 (19.5/24*2*pi, -(GG+HH)/2, 19.0/24*2*pi, 20.0/24*2*pi,-GG,-HH),
 (20.5/24*2*pi, -(GG+HH)/2, 20.0/24*2*pi, 21.0/24*2*pi,-GG,-HH),
 (21.5/24*2*pi, -(GG+HH)/2, 21.0/24*2*pi, 22.0/24*2*pi,-GG,-HH),
 (22.5/24*2*pi, -(GG+HH)/2, 22.0/24*2*pi, 23.0/24*2*pi,-GG,-HH),
 (23.5/24*2*pi, -(GG+HH)/2, 23.0/24*2*pi, 24.0/24*2*pi,-GG,-HH),

 (0.5/20*2*pi, -(FF+GG)/2, 0.0/20*2*pi, 1.0/20*2*pi,-FF,-GG),  {20 circle segments}
 (1.5/20*2*pi, -(FF+GG)/2, 1.0/20*2*pi, 2.0/20*2*pi,-FF,-GG),
 (2.5/20*2*pi, -(FF+GG)/2, 2.0/20*2*pi, 3.0/20*2*pi,-FF,-GG),
 (3.5/20*2*pi, -(FF+GG)/2, 3.0/20*2*pi, 4.0/20*2*pi,-FF,-GG),
 (4.5/20*2*pi, -(FF+GG)/2, 4.0/20*2*pi, 5.0/20*2*pi,-FF,-GG),
 (5.5/20*2*pi, -(FF+GG)/2, 5.0/20*2*pi, 6.0/20*2*pi,-FF,-GG),
 (6.5/20*2*pi, -(FF+GG)/2, 6.0/20*2*pi, 7.0/20*2*pi,-FF,-GG),
 (7.5/20*2*pi, -(FF+GG)/2, 7.0/20*2*pi, 8.0/20*2*pi,-FF,-GG),
 (8.5/20*2*pi, -(FF+GG)/2, 8.0/20*2*pi, 9.0/20*2*pi,-FF,-GG),
 (9.5/20*2*pi, -(FF+GG)/2, 9.0/20*2*pi, 10.0/20*2*pi,-FF,-GG),
 (10.5/20*2*pi, -(FF+GG)/2, 10.0/20*2*pi, 11.0/20*2*pi,-FF,-GG),
 (11.5/20*2*pi, -(FF+GG)/2, 11.0/20*2*pi, 12.0/20*2*pi,-FF,-GG),
 (12.5/20*2*pi, -(FF+GG)/2, 12.0/20*2*pi, 13.0/20*2*pi,-FF,-GG),
 (13.5/20*2*pi, -(FF+GG)/2, 13.0/20*2*pi, 14.0/20*2*pi,-FF,-GG),
 (14.5/20*2*pi, -(FF+GG)/2, 14.0/20*2*pi, 15.0/20*2*pi,-FF,-GG),
 (15.5/20*2*pi, -(FF+GG)/2, 15.0/20*2*pi, 16.0/20*2*pi,-FF,-GG),
 (16.5/20*2*pi, -(FF+GG)/2, 16.0/20*2*pi, 17.0/20*2*pi,-FF,-GG),
 (17.5/20*2*pi, -(FF+GG)/2, 17.0/20*2*pi, 18.0/20*2*pi,-FF,-GG),
 (18.5/20*2*pi, -(FF+GG)/2, 18.0/20*2*pi, 19.0/20*2*pi,-FF,-GG),
 (19.5/20*2*pi, -(FF+GG)/2, 19.0/20*2*pi, 20.0/20*2*pi,-FF,-GG),

 (0.5/16*2*pi, -(EE+FF)/2, 0.0/16*2*pi, 1.0/16*2*pi,-EE,-FF),  {16 circle segments}
 (1.5/16*2*pi, -(EE+FF)/2, 1.0/16*2*pi, 2.0/16*2*pi,-EE,-FF),
 (2.5/16*2*pi, -(EE+FF)/2, 2.0/16*2*pi, 3.0/16*2*pi,-EE,-FF),
 (3.5/16*2*pi, -(EE+FF)/2, 3.0/16*2*pi, 4.0/16*2*pi,-EE,-FF),
 (4.5/16*2*pi, -(EE+FF)/2, 4.0/16*2*pi, 5.0/16*2*pi,-EE,-FF),
 (5.5/16*2*pi, -(EE+FF)/2, 5.0/16*2*pi, 6.0/16*2*pi,-EE,-FF),
 (6.5/16*2*pi, -(EE+FF)/2, 6.0/16*2*pi, 7.0/16*2*pi,-EE,-FF),
 (7.5/16*2*pi, -(EE+FF)/2, 7.0/16*2*pi, 8.0/16*2*pi,-EE,-FF),
 (8.5/16*2*pi, -(EE+FF)/2, 8.0/16*2*pi, 9.0/16*2*pi,-EE,-FF),
 (9.5/16*2*pi, -(EE+FF)/2, 9.0/16*2*pi, 10.0/16*2*pi,-EE,-FF),
 (10.5/16*2*pi, -(EE+FF)/2, 10.0/16*2*pi, 11.0/16*2*pi,-EE,-FF),
 (11.5/16*2*pi, -(EE+FF)/2, 11.0/16*2*pi, 12.0/16*2*pi,-EE,-FF),
 (12.5/16*2*pi, -(EE+FF)/2, 12.0/16*2*pi, 13.0/16*2*pi,-EE,-FF),
 (13.5/16*2*pi, -(EE+FF)/2, 13.0/16*2*pi, 14.0/16*2*pi,-EE,-FF),
 (14.5/16*2*pi, -(EE+FF)/2, 14.0/16*2*pi, 15.0/16*2*pi,-EE,-FF),
 (15.5/16*2*pi, -(EE+FF)/2, 15.0/16*2*pi, 16.0/16*2*pi,-EE,-FF),

 (0.5/12*2*pi, -(DD+EE)/2, 0.0/12*2*pi, 1.0/12*2*pi,-DD,-EE),  {12 circle segments}
 (1.5/12*2*pi, -(DD+EE)/2, 1.0/12*2*pi, 2.0/12*2*pi,-DD,-EE),
 (2.5/12*2*pi, -(DD+EE)/2, 2.0/12*2*pi, 3.0/12*2*pi,-DD,-EE),
 (3.5/12*2*pi, -(DD+EE)/2, 3.0/12*2*pi, 4.0/12*2*pi,-DD,-EE),
 (4.5/12*2*pi, -(DD+EE)/2, 4.0/12*2*pi, 5.0/12*2*pi,-DD,-EE),
 (5.5/12*2*pi, -(DD+EE)/2, 5.0/12*2*pi, 6.0/12*2*pi,-DD,-EE),
 (6.5/12*2*pi, -(DD+EE)/2, 6.0/12*2*pi, 7.0/12*2*pi,-DD,-EE),
 (7.5/12*2*pi, -(DD+EE)/2, 7.0/12*2*pi, 8.0/12*2*pi,-DD,-EE),
 (8.5/12*2*pi, -(DD+EE)/2, 8.0/12*2*pi, 9.0/12*2*pi,-DD,-EE),
 (9.5/12*2*pi, -(DD+EE)/2, 9.0/12*2*pi, 10.0/12*2*pi,-DD,-EE),
 (10.5/12*2*pi,-(DD+EE)/2, 10.0/12*2*pi, 11.0/12*2*pi,-DD,-EE),
 (11.5/12*2*pi,-(DD+EE)/2, 11.0/12*2*pi, 12.0/12*2*pi,-DD,-EE),

 (0.5/8*2*pi, -(CC+DD)/2, 0.0/8*2*pi, 1.0/8*2*pi,-CC,-DD),  {8 circle segments}
 (1.5/8*2*pi, -(CC+DD)/2, 1.0/8*2*pi, 2.0/8*2*pi,-CC,-DD),
 (2.5/8*2*pi, -(CC+DD)/2, 2.0/8*2*pi, 3.0/8*2*pi,-CC,-DD),
 (3.5/8*2*pi, -(CC+DD)/2, 3.0/8*2*pi, 4.0/8*2*pi,-CC,-DD),
 (4.5/8*2*pi, -(CC+DD)/2, 4.0/8*2*pi, 5.0/8*2*pi,-CC,-DD),
 (5.5/8*2*pi, -(CC+DD)/2, 5.0/8*2*pi, 6.0/8*2*pi,-CC,-DD),
 (6.5/8*2*pi, -(CC+DD)/2, 6.0/8*2*pi, 7.0/8*2*pi,-CC,-DD),
 (7.5/8*2*pi, -(CC+DD)/2, 7.0/8*2*pi, 8.0/8*2*pi,-CC,-DD),

 (0.5/4*2*pi, -(BB+CC)/2, 0.0/4*2*pi,  1.0/4*2*pi,-BB,-CC),  {4 circle segments}
 (1.5/4*2*pi, -(BB+CC)/2, 1.0/4*2*pi, 2.0/4*2*pi,-BB,-CC),
 (2.5/4*2*pi, -(BB+CC)/2, 2.0/4*2*pi, 3.0/4*2*pi,-BB,-CC),
 (3.5/4*2*pi, -(BB+CC)/2, 3.0/4*2*pi, 4.0/4*2*pi,-BB,-CC),

 ( 0        , -AA        ,  0        ,pi         ,-AA,-BB )); {1 segment}   {north pole }


filenames290 : array[1..290] of string= {}
(('0101.290'),

 ('0201.290'),  {combined cells from 8}
 ('0202.290'),
 ('0203.290'),
 ('0204.290'),

 ('0301.290'),
 ('0302.290'),
 ('0303.290'),
 ('0304.290'),
 ('0305.290'),
 ('0306.290'),
 ('0307.290'),
 ('0308.290'),

 ('0401.290'),
 ('0402.290'),
 ('0403.290'),
 ('0404.290'),
 ('0405.290'),
 ('0406.290'),
 ('0407.290'),
 ('0408.290'),
 ('0409.290'),
 ('0410.290'),
 ('0411.290'),
 ('0412.290'),

 ('0501.290'),
 ('0502.290'),
 ('0503.290'),
 ('0504.290'),
 ('0505.290'),
 ('0506.290'),
 ('0507.290'),
 ('0508.290'),
 ('0509.290'),
 ('0510.290'),
 ('0511.290'),
 ('0512.290'),
 ('0513.290'),
 ('0514.290'),
 ('0515.290'),
 ('0516.290'),

 ('0601.290'),
 ('0602.290'),
 ('0603.290'),
 ('0604.290'),
 ('0605.290'),
 ('0606.290'),
 ('0607.290'),
 ('0608.290'),
 ('0609.290'),
 ('0610.290'),
 ('0611.290'),
 ('0612.290'),
 ('0613.290'),
 ('0614.290'),
 ('0615.290'),
 ('0616.290'),
 ('0617.290'),
 ('0618.290'),
 ('0619.290'),
 ('0620.290'),

 ('0701.290'),
 ('0702.290'),
 ('0703.290'),
 ('0704.290'),
 ('0705.290'),
 ('0706.290'),
 ('0707.290'),
 ('0708.290'),
 ('0709.290'),
 ('0710.290'),
 ('0711.290'),
 ('0712.290'),
 ('0713.290'),
 ('0714.290'),
 ('0715.290'),
 ('0716.290'),
 ('0717.290'),
 ('0718.290'),
 ('0719.290'),
 ('0720.290'),
 ('0721.290'),
 ('0722.290'),
 ('0723.290'),
 ('0724.290'),

 ('0801.290'),
 ('0802.290'),
 ('0803.290'),
 ('0804.290'),
 ('0805.290'),
 ('0806.290'),
 ('0807.290'),
 ('0808.290'),
 ('0809.290'),
 ('0810.290'),
 ('0811.290'),
 ('0812.290'),
 ('0813.290'),
 ('0814.290'),
 ('0815.290'),
 ('0816.290'),
 ('0817.290'),
 ('0818.290'),
 ('0819.290'),
 ('0820.290'),
 ('0821.290'),
 ('0822.290'),
 ('0823.290'),
 ('0824.290'),
 ('0825.290'),
 ('0826.290'),
 ('0827.290'),
 ('0828.290'),

 ('0901.290'),
 ('0902.290'),
 ('0903.290'),
 ('0904.290'),
 ('0905.290'),
 ('0906.290'),
 ('0907.290'),
 ('0908.290'),
 ('0909.290'),
 ('0910.290'),
 ('0911.290'),
 ('0912.290'),
 ('0913.290'),
 ('0914.290'),
 ('0915.290'),
 ('0916.290'),
 ('0917.290'),
 ('0918.290'),
 ('0919.290'),
 ('0920.290'),
 ('0921.290'),
 ('0922.290'),
 ('0923.290'),
 ('0924.290'),
 ('0925.290'),
 ('0926.290'),
 ('0927.290'),
 ('0928.290'),
 ('0929.290'),
 ('0930.290'),
 ('0931.290'),
 ('0932.290'),

 ('1001.290'),
 ('1002.290'),
 ('1003.290'),
 ('1004.290'),
 ('1005.290'),
 ('1006.290'),
 ('1007.290'),
 ('1008.290'),
 ('1009.290'),
 ('1010.290'),
 ('1011.290'),
 ('1012.290'),
 ('1013.290'),
 ('1014.290'),
 ('1015.290'),
 ('1016.290'),
 ('1017.290'),
 ('1018.290'),
 ('1019.290'),
 ('1020.290'),
 ('1021.290'),
 ('1022.290'),
 ('1023.290'),
 ('1024.290'),
 ('1025.290'),
 ('1026.290'),
 ('1027.290'),
 ('1028.290'),
 ('1029.290'),
 ('1030.290'),
 ('1031.290'),
 ('1032.290'),

 ('1101.290'),
 ('1102.290'),
 ('1103.290'),
 ('1104.290'),
 ('1105.290'),
 ('1106.290'),
 ('1107.290'),
 ('1108.290'),
 ('1109.290'),
 ('1110.290'),
 ('1111.290'),
 ('1112.290'),
 ('1113.290'),
 ('1114.290'),
 ('1115.290'),
 ('1116.290'),
 ('1117.290'),
 ('1118.290'),
 ('1119.290'),
 ('1120.290'),
 ('1121.290'),
 ('1122.290'),
 ('1123.290'),
 ('1124.290'),
 ('1125.290'),
 ('1126.290'),
 ('1127.290'),
 ('1128.290'),

 ('1201.290'),
 ('1202.290'),
 ('1203.290'),
 ('1204.290'),
 ('1205.290'),
 ('1206.290'),
 ('1207.290'),
 ('1208.290'),
 ('1209.290'),
 ('1210.290'),
 ('1211.290'),
 ('1212.290'),
 ('1213.290'),
 ('1214.290'),
 ('1215.290'),
 ('1216.290'),
 ('1217.290'),
 ('1218.290'),
 ('1219.290'),
 ('1220.290'),
 ('1221.290'),
 ('1222.290'),
 ('1223.290'),
 ('1224.290'),

 ('1301.290'),
 ('1302.290'),
 ('1303.290'),
 ('1304.290'),
 ('1305.290'),
 ('1306.290'),
 ('1307.290'),
 ('1308.290'),
 ('1309.290'),
 ('1310.290'),
 ('1311.290'),
 ('1312.290'),
 ('1313.290'),
 ('1314.290'),
 ('1315.290'),
 ('1316.290'),
 ('1317.290'),
 ('1318.290'),
 ('1319.290'),
 ('1320.290'),

 ('1401.290'),
 ('1402.290'),
 ('1403.290'),
 ('1404.290'),
 ('1405.290'),
 ('1406.290'),
 ('1407.290'),
 ('1408.290'),
 ('1409.290'),
 ('1410.290'),
 ('1411.290'),
 ('1412.290'),
 ('1413.290'),
 ('1414.290'),
 ('1415.290'),
 ('1416.290'),

 ('1501.290'),
 ('1502.290'),
 ('1503.290'),
 ('1504.290'),
 ('1505.290'),
 ('1506.290'),
 ('1507.290'),
 ('1508.290'),
 ('1509.290'),
 ('1510.290'),
 ('1511.290'),
 ('1512.290'),

 ('1601.290'),
 ('1602.290'),
 ('1603.290'),
 ('1604.290'),
 ('1605.290'),
 ('1606.290'),
 ('1607.290'),
 ('1608.290'),


 ('1701.290'),
 ('1702.290'),
 ('1703.290'),
 ('1704.290'),

 ('1801.290'));

const
    cos_value : array[-360..360] of double=
    (1.000000000000000,
    0.999847695156391,
    0.999390827019096,
    0.998629534754574,
    0.997564050259824,
    0.996194698091746,
    0.994521895368273,
    0.992546151641322,
    0.990268068741570,
    0.987688340595138,
    0.984807753012208,
    0.981627183447664,
    0.978147600733806,
    0.974370064785235,
    0.970295726275996,
    0.965925826289068,
    0.961261695938319,
    0.956304755963036,
    0.951056516295154,
    0.945518575599317,
    0.939692620785908,
    0.933580426497202,
    0.927183854566787,
    0.920504853452440,
    0.913545457642601,
    0.906307787036650,
    0.898794046299167,
    0.891006524188368,
    0.882947592858927,
    0.874619707139396,
    0.866025403784438,
    0.857167300702112,
    0.848048096156425,
    0.838670567945424,
    0.829037572555041,
    0.819152044288992,
    0.809016994374947,
    0.798635510047293,
    0.788010753606722,
    0.777145961456971,
    0.766044443118978,
    0.754709580222772,
    0.743144825477394,
    0.731353701619171,
    0.719339800338651,
    0.707106781186547,
    0.694658370458997,
    0.681998360062498,
    0.669130606358858,
    0.656059028990507,
    0.642787609686539,
    0.629320391049838,
    0.615661475325659,
    0.601815023152048,
    0.587785252292473,
    0.573576436351046,
    0.559192903470746,
    0.544639035015027,
    0.529919264233205,
    0.515038074910054,
    0.500000000000000,
    0.484809620246337,
    0.469471562785890,
    0.453990499739547,
    0.438371146789077,
    0.422618261740700,
    0.406736643075801,
    0.390731128489273,
    0.374606593415912,
    0.358367949545300,
    0.342020143325668,
    0.325568154457156,
    0.309016994374947,
    0.292371704722737,
    0.275637355816999,
    0.258819045102521,
    0.241921895599667,
    0.224951054343865,
    0.207911690817759,
    0.190808995376544,
    0.173648177666930,
    0.156434465040231,
    0.139173100960065,
    0.121869343405148,
    0.104528463267653,
    0.087155742747658,
    0.069756473744125,
    0.052335956242944,
    0.034899496702501,
    0.017452406437283,
    0.000000000000000,
    -0.017452406437284,
    -0.034899496702502,
    -0.052335956242944,
    -0.069756473744126,
    -0.087155742747658,
    -0.104528463267653,
    -0.121869343405147,
    -0.139173100960065,
    -0.156434465040231,
    -0.173648177666930,
    -0.190808995376545,
    -0.207911690817760,
    -0.224951054343865,
    -0.241921895599668,
    -0.258819045102521,
    -0.275637355816999,
    -0.292371704722737,
    -0.309016994374948,
    -0.325568154457157,
    -0.342020143325669,
    -0.358367949545301,
    -0.374606593415912,
    -0.390731128489274,
    -0.406736643075800,
    -0.422618261740700,
    -0.438371146789078,
    -0.453990499739547,
    -0.469471562785891,
    -0.484809620246337,
    -0.500000000000000,
    -0.515038074910054,
    -0.529919264233205,
    -0.544639035015027,
    -0.559192903470747,
    -0.573576436351046,
    -0.587785252292473,
    -0.601815023152048,
    -0.615661475325658,
    -0.629320391049837,
    -0.642787609686539,
    -0.656059028990508,
    -0.669130606358858,
    -0.681998360062499,
    -0.694658370458998,
    -0.707106781186548,
    -0.719339800338651,
    -0.731353701619171,
    -0.743144825477394,
    -0.754709580222772,
    -0.766044443118978,
    -0.777145961456971,
    -0.788010753606722,
    -0.798635510047293,
    -0.809016994374948,
    -0.819152044288992,
    -0.829037572555042,
    -0.838670567945424,
    -0.848048096156426,
    -0.857167300702112,
    -0.866025403784439,
    -0.874619707139396,
    -0.882947592858927,
    -0.891006524188368,
    -0.898794046299167,
    -0.906307787036650,
    -0.913545457642601,
    -0.920504853452440,
    -0.927183854566787,
    -0.933580426497202,
    -0.939692620785908,
    -0.945518575599317,
    -0.951056516295154,
    -0.956304755963036,
    -0.961261695938319,
    -0.965925826289068,
    -0.970295726275996,
    -0.974370064785235,
    -0.978147600733806,
    -0.981627183447664,
    -0.984807753012208,
    -0.987688340595138,
    -0.990268068741570,
    -0.992546151641322,
    -0.994521895368273,
    -0.996194698091746,
    -0.997564050259824,
    -0.998629534754574,
    -0.999390827019096,
    -0.999847695156391,
    -1.000000000000000,
    -0.999847695156391,
    -0.999390827019096,
    -0.998629534754574,
    -0.997564050259824,
    -0.996194698091746,
    -0.994521895368273,
    -0.992546151641322,
    -0.990268068741570,
    -0.987688340595138,
    -0.984807753012208,
    -0.981627183447664,
    -0.978147600733806,
    -0.974370064785235,
    -0.970295726275996,
    -0.965925826289068,
    -0.961261695938319,
    -0.956304755963035,
    -0.951056516295154,
    -0.945518575599317,
    -0.939692620785908,
    -0.933580426497202,
    -0.927183854566787,
    -0.920504853452440,
    -0.913545457642601,
    -0.906307787036650,
    -0.898794046299167,
    -0.891006524188368,
    -0.882947592858927,
    -0.874619707139396,
    -0.866025403784439,
    -0.857167300702112,
    -0.848048096156426,
    -0.838670567945424,
    -0.829037572555042,
    -0.819152044288992,
    -0.809016994374947,
    -0.798635510047293,
    -0.788010753606722,
    -0.777145961456971,
    -0.766044443118978,
    -0.754709580222772,
    -0.743144825477394,
    -0.731353701619170,
    -0.719339800338651,
    -0.707106781186547,
    -0.694658370458997,
    -0.681998360062498,
    -0.669130606358858,
    -0.656059028990507,
    -0.642787609686539,
    -0.629320391049837,
    -0.615661475325658,
    -0.601815023152048,
    -0.587785252292473,
    -0.573576436351046,
    -0.559192903470747,
    -0.544639035015027,
    -0.529919264233205,
    -0.515038074910054,
    -0.500000000000000,
    -0.484809620246337,
    -0.469471562785891,
    -0.453990499739547,
    -0.438371146789078,
    -0.422618261740699,
    -0.406736643075800,
    -0.390731128489274,
    -0.374606593415912,
    -0.358367949545300,
    -0.342020143325669,
    -0.325568154457156,
    -0.309016994374947,
    -0.292371704722737,
    -0.275637355816999,
    -0.258819045102521,
    -0.241921895599668,
    -0.224951054343865,
    -0.207911690817759,
    -0.190808995376545,
    -0.173648177666930,
    -0.156434465040231,
    -0.139173100960065,
    -0.121869343405147,
    -0.104528463267653,
    -0.087155742747658,
    -0.069756473744125,
    -0.052335956242944,
    -0.034899496702501,
    -0.017452406437284,
    0.000000000000000,
    0.017452406437283,
    0.034899496702501,
    0.052335956242944,
    0.069756473744126,
    0.087155742747658,
    0.104528463267653,
    0.121869343405147,
    0.139173100960066,
    0.156434465040231,
    0.173648177666930,
    0.190808995376545,
    0.207911690817759,
    0.224951054343865,
    0.241921895599668,
    0.258819045102521,
    0.275637355816999,
    0.292371704722737,
    0.309016994374947,
    0.325568154457157,
    0.342020143325669,
    0.358367949545300,
    0.374606593415912,
    0.390731128489274,
    0.406736643075800,
    0.422618261740699,
    0.438371146789077,
    0.453990499739547,
    0.469471562785891,
    0.484809620246337,
    0.500000000000000,
    0.515038074910054,
    0.529919264233205,
    0.544639035015027,
    0.559192903470747,
    0.573576436351046,
    0.587785252292473,
    0.601815023152048,
    0.615661475325658,
    0.629320391049838,
    0.642787609686539,
    0.656059028990507,
    0.669130606358858,
    0.681998360062498,
    0.694658370458997,
    0.707106781186548,
    0.719339800338651,
    0.731353701619171,
    0.743144825477394,
    0.754709580222772,
    0.766044443118978,
    0.777145961456971,
    0.788010753606722,
    0.798635510047293,
    0.809016994374947,
    0.819152044288992,
    0.829037572555042,
    0.838670567945424,
    0.848048096156426,
    0.857167300702112,
    0.866025403784439,
    0.874619707139396,
    0.882947592858927,
    0.891006524188368,
    0.898794046299167,
    0.906307787036650,
    0.913545457642601,
    0.920504853452440,
    0.927183854566787,
    0.933580426497202,
    0.939692620785908,
    0.945518575599317,
    0.951056516295154,
    0.956304755963035,
    0.961261695938319,
    0.965925826289068,
    0.970295726275996,
    0.974370064785235,
    0.978147600733806,
    0.981627183447664,
    0.984807753012208,
    0.987688340595138,
    0.990268068741570,
    0.992546151641322,
    0.994521895368273,
    0.996194698091746,
    0.997564050259824,
    0.998629534754574,
    0.999390827019096,
    0.999847695156391,
    1.000000000000000,
    0.999847695156391,
    0.999390827019096,
    0.998629534754574,
    0.997564050259824,
    0.996194698091746,
    0.994521895368273,
    0.992546151641322,
    0.990268068741570,
    0.987688340595138,
    0.984807753012208,
    0.981627183447664,
    0.978147600733806,
    0.974370064785235,
    0.970295726275996,
    0.965925826289068,
    0.961261695938319,
    0.956304755963035,
    0.951056516295154,
    0.945518575599317,
    0.939692620785908,
    0.933580426497202,
    0.927183854566787,
    0.920504853452440,
    0.913545457642601,
    0.906307787036650,
    0.898794046299167,
    0.891006524188368,
    0.882947592858927,
    0.874619707139396,
    0.866025403784439,
    0.857167300702112,
    0.848048096156426,
    0.838670567945424,
    0.829037572555042,
    0.819152044288992,
    0.809016994374947,
    0.798635510047293,
    0.788010753606722,
    0.777145961456971,
    0.766044443118978,
    0.754709580222772,
    0.743144825477394,
    0.731353701619171,
    0.719339800338651,
    0.707106781186548,
    0.694658370458997,
    0.681998360062498,
    0.669130606358858,
    0.656059028990507,
    0.642787609686539,
    0.629320391049838,
    0.615661475325658,
    0.601815023152048,
    0.587785252292473,
    0.573576436351046,
    0.559192903470747,
    0.544639035015027,
    0.529919264233205,
    0.515038074910054,
    0.500000000000000,
    0.484809620246337,
    0.469471562785891,
    0.453990499739547,
    0.438371146789077,
    0.422618261740699,
    0.406736643075800,
    0.390731128489274,
    0.374606593415912,
    0.358367949545300,
    0.342020143325669,
    0.325568154457157,
    0.309016994374947,
    0.292371704722737,
    0.275637355816999,
    0.258819045102521,
    0.241921895599668,
    0.224951054343865,
    0.207911690817759,
    0.190808995376545,
    0.173648177666930,
    0.156434465040231,
    0.139173100960066,
    0.121869343405147,
    0.104528463267653,
    0.087155742747658,
    0.069756473744126,
    0.052335956242944,
    0.034899496702501,
    0.017452406437283,
    0.000000000000000,
    -0.017452406437284,
    -0.034899496702501,
    -0.052335956242944,
    -0.069756473744125,
    -0.087155742747658,
    -0.104528463267653,
    -0.121869343405147,
    -0.139173100960065,
    -0.156434465040231,
    -0.173648177666930,
    -0.190808995376545,
    -0.207911690817759,
    -0.224951054343865,
    -0.241921895599668,
    -0.258819045102521,
    -0.275637355816999,
    -0.292371704722737,
    -0.309016994374947,
    -0.325568154457156,
    -0.342020143325669,
    -0.358367949545300,
    -0.374606593415912,
    -0.390731128489274,
    -0.406736643075800,
    -0.422618261740699,
    -0.438371146789078,
    -0.453990499739547,
    -0.469471562785891,
    -0.484809620246337,
    -0.500000000000000,
    -0.515038074910054,
    -0.529919264233205,
    -0.544639035015027,
    -0.559192903470747,
    -0.573576436351046,
    -0.587785252292473,
    -0.601815023152048,
    -0.615661475325658,
    -0.629320391049837,
    -0.642787609686539,
    -0.656059028990507,
    -0.669130606358858,
    -0.681998360062498,
    -0.694658370458997,
    -0.707106781186547,
    -0.719339800338651,
    -0.731353701619170,
    -0.743144825477394,
    -0.754709580222772,
    -0.766044443118978,
    -0.777145961456971,
    -0.788010753606722,
    -0.798635510047293,
    -0.809016994374947,
    -0.819152044288992,
    -0.829037572555042,
    -0.838670567945424,
    -0.848048096156426,
    -0.857167300702112,
    -0.866025403784439,
    -0.874619707139396,
    -0.882947592858927,
    -0.891006524188368,
    -0.898794046299167,
    -0.906307787036650,
    -0.913545457642601,
    -0.920504853452440,
    -0.927183854566787,
    -0.933580426497202,
    -0.939692620785908,
    -0.945518575599317,
    -0.951056516295154,
    -0.956304755963035,
    -0.961261695938319,
    -0.965925826289068,
    -0.970295726275996,
    -0.974370064785235,
    -0.978147600733806,
    -0.981627183447664,
    -0.984807753012208,
    -0.987688340595138,
    -0.990268068741570,
    -0.992546151641322,
    -0.994521895368273,
    -0.996194698091746,
    -0.997564050259824,
    -0.998629534754574,
    -0.999390827019096,
    -0.999847695156391,
    -1.000000000000000,
    -0.999847695156391,
    -0.999390827019096,
    -0.998629534754574,
    -0.997564050259824,
    -0.996194698091746,
    -0.994521895368273,
    -0.992546151641322,
    -0.990268068741570,
    -0.987688340595138,
    -0.984807753012208,
    -0.981627183447664,
    -0.978147600733806,
    -0.974370064785235,
    -0.970295726275996,
    -0.965925826289068,
    -0.961261695938319,
    -0.956304755963036,
    -0.951056516295154,
    -0.945518575599317,
    -0.939692620785908,
    -0.933580426497202,
    -0.927183854566787,
    -0.920504853452440,
    -0.913545457642601,
    -0.906307787036650,
    -0.898794046299167,
    -0.891006524188368,
    -0.882947592858927,
    -0.874619707139396,
    -0.866025403784439,
    -0.857167300702112,
    -0.848048096156426,
    -0.838670567945424,
    -0.829037572555042,
    -0.819152044288992,
    -0.809016994374948,
    -0.798635510047293,
    -0.788010753606722,
    -0.777145961456971,
    -0.766044443118978,
    -0.754709580222772,
    -0.743144825477394,
    -0.731353701619171,
    -0.719339800338651,
    -0.707106781186548,
    -0.694658370458998,
    -0.681998360062499,
    -0.669130606358858,
    -0.656059028990508,
    -0.642787609686539,
    -0.629320391049837,
    -0.615661475325658,
    -0.601815023152048,
    -0.587785252292473,
    -0.573576436351046,
    -0.559192903470747,
    -0.544639035015027,
    -0.529919264233205,
    -0.515038074910054,
    -0.500000000000000,
    -0.484809620246337,
    -0.469471562785891,
    -0.453990499739547,
    -0.438371146789078,
    -0.422618261740700,
    -0.406736643075800,
    -0.390731128489274,
    -0.374606593415912,
    -0.358367949545301,
    -0.342020143325669,
    -0.325568154457157,
    -0.309016994374948,
    -0.292371704722737,
    -0.275637355816999,
    -0.258819045102521,
    -0.241921895599668,
    -0.224951054343865,
    -0.207911690817760,
    -0.190808995376545,
    -0.173648177666930,
    -0.156434465040231,
    -0.139173100960065,
    -0.121869343405147,
    -0.104528463267653,
    -0.087155742747658,
    -0.069756473744126,
    -0.052335956242944,
    -0.034899496702502,
    -0.017452406437284,
    0.000000000000000,
    0.017452406437283,
    0.034899496702501,
    0.052335956242944,
    0.069756473744125,
    0.087155742747658,
    0.104528463267653,
    0.121869343405148,
    0.139173100960065,
    0.156434465040231,
    0.173648177666930,
    0.190808995376544,
    0.207911690817759,
    0.224951054343865,
    0.241921895599667,
    0.258819045102521,
    0.275637355816999,
    0.292371704722737,
    0.309016994374947,
    0.325568154457156,
    0.342020143325668,
    0.358367949545300,
    0.374606593415912,
    0.390731128489273,
    0.406736643075801,
    0.422618261740700,
    0.438371146789077,
    0.453990499739547,
    0.469471562785890,
    0.484809620246337,
    0.500000000000000,
    0.515038074910054,
    0.529919264233205,
    0.544639035015027,
    0.559192903470746,
    0.573576436351046,
    0.587785252292473,
    0.601815023152048,
    0.615661475325659,
    0.629320391049838,
    0.642787609686539,
    0.656059028990507,
    0.669130606358858,
    0.681998360062498,
    0.694658370458997,
    0.707106781186547,
    0.719339800338651,
    0.731353701619171,
    0.743144825477394,
    0.754709580222772,
    0.766044443118978,
    0.777145961456971,
    0.788010753606722,
    0.798635510047293,
    0.809016994374947,
    0.819152044288992,
    0.829037572555041,
    0.838670567945424,
    0.848048096156425,
    0.857167300702112,
    0.866025403784438,
    0.874619707139396,
    0.882947592858927,
    0.891006524188368,
    0.898794046299167,
    0.906307787036650,
    0.913545457642601,
    0.920504853452440,
    0.927183854566787,
    0.933580426497202,
    0.939692620785908,
    0.945518575599317,
    0.951056516295154,
    0.956304755963036,
    0.961261695938319,
    0.965925826289068,
    0.970295726275996,
    0.974370064785235,
    0.978147600733806,
    0.981627183447664,
    0.984807753012208,
    0.987688340595138,
    0.990268068741570,
    0.992546151641322,
    0.994521895368273,
    0.996194698091746,
    0.997564050259824,
    0.998629534754574,
    0.999390827019096,
    0.999847695156391,
    1.000000000000000);


    sin_value : array[-360..360] of double=
    (0.000000000000000,
    0.017452406437284,
    0.034899496702501,
    0.052335956242944,
    0.069756473744125,
    0.087155742747658,
    0.104528463267653,
    0.121869343405148,
    0.139173100960066,
    0.156434465040231,
    0.173648177666931,
    0.190808995376545,
    0.207911690817760,
    0.224951054343865,
    0.241921895599668,
    0.258819045102521,
    0.275637355817000,
    0.292371704722736,
    0.309016994374948,
    0.325568154457158,
    0.342020143325669,
    0.358367949545301,
    0.374606593415912,
    0.390731128489275,
    0.406736643075800,
    0.422618261740700,
    0.438371146789077,
    0.453990499739547,
    0.469471562785891,
    0.484809620246337,
    0.500000000000000,
    0.515038074910054,
    0.529919264233206,
    0.544639035015027,
    0.559192903470747,
    0.573576436351046,
    0.587785252292473,
    0.601815023152048,
    0.615661475325659,
    0.629320391049838,
    0.642787609686540,
    0.656059028990507,
    0.669130606358858,
    0.681998360062498,
    0.694658370458998,
    0.707106781186548,
    0.719339800338652,
    0.731353701619171,
    0.743144825477395,
    0.754709580222772,
    0.766044443118978,
    0.777145961456971,
    0.788010753606722,
    0.798635510047293,
    0.809016994374948,
    0.819152044288992,
    0.829037572555042,
    0.838670567945424,
    0.848048096156426,
    0.857167300702112,
    0.866025403784439,
    0.874619707139396,
    0.882947592858927,
    0.891006524188368,
    0.898794046299167,
    0.906307787036650,
    0.913545457642601,
    0.920504853452440,
    0.927183854566787,
    0.933580426497202,
    0.939692620785909,
    0.945518575599317,
    0.951056516295154,
    0.956304755963035,
    0.961261695938319,
    0.965925826289068,
    0.970295726275997,
    0.974370064785235,
    0.978147600733806,
    0.981627183447664,
    0.984807753012208,
    0.987688340595138,
    0.990268068741570,
    0.992546151641322,
    0.994521895368273,
    0.996194698091746,
    0.997564050259824,
    0.998629534754574,
    0.999390827019096,
    0.999847695156391,
    1.000000000000000,
    0.999847695156391,
    0.999390827019096,
    0.998629534754574,
    0.997564050259824,
    0.996194698091746,
    0.994521895368273,
    0.992546151641322,
    0.990268068741570,
    0.987688340595138,
    0.984807753012208,
    0.981627183447664,
    0.978147600733806,
    0.974370064785235,
    0.970295726275996,
    0.965925826289068,
    0.961261695938319,
    0.956304755963035,
    0.951056516295154,
    0.945518575599317,
    0.939692620785908,
    0.933580426497202,
    0.927183854566787,
    0.920504853452440,
    0.913545457642601,
    0.906307787036650,
    0.898794046299167,
    0.891006524188368,
    0.882947592858927,
    0.874619707139396,
    0.866025403784438,
    0.857167300702112,
    0.848048096156426,
    0.838670567945424,
    0.829037572555041,
    0.819152044288992,
    0.809016994374947,
    0.798635510047293,
    0.788010753606722,
    0.777145961456971,
    0.766044443118978,
    0.754709580222772,
    0.743144825477394,
    0.731353701619170,
    0.719339800338651,
    0.707106781186547,
    0.694658370458997,
    0.681998360062498,
    0.669130606358858,
    0.656059028990507,
    0.642787609686539,
    0.629320391049838,
    0.615661475325658,
    0.601815023152048,
    0.587785252292473,
    0.573576436351046,
    0.559192903470747,
    0.544639035015027,
    0.529919264233205,
    0.515038074910054,
    0.500000000000000,
    0.484809620246337,
    0.469471562785891,
    0.453990499739546,
    0.438371146789077,
    0.422618261740699,
    0.406736643075800,
    0.390731128489274,
    0.374606593415912,
    0.358367949545300,
    0.342020143325669,
    0.325568154457157,
    0.309016994374948,
    0.292371704722736,
    0.275637355816999,
    0.258819045102520,
    0.241921895599668,
    0.224951054343865,
    0.207911690817759,
    0.190808995376545,
    0.173648177666930,
    0.156434465040231,
    0.139173100960066,
    0.121869343405148,
    0.104528463267653,
    0.087155742747658,
    0.069756473744125,
    0.052335956242944,
    0.034899496702501,
    0.017452406437283,
    0.000000000000000,
    -0.017452406437283,
    -0.034899496702501,
    -0.052335956242944,
    -0.069756473744126,
    -0.087155742747659,
    -0.104528463267654,
    -0.121869343405148,
    -0.139173100960066,
    -0.156434465040231,
    -0.173648177666930,
    -0.190808995376545,
    -0.207911690817759,
    -0.224951054343865,
    -0.241921895599668,
    -0.258819045102521,
    -0.275637355817000,
    -0.292371704722737,
    -0.309016994374948,
    -0.325568154457157,
    -0.342020143325669,
    -0.358367949545300,
    -0.374606593415912,
    -0.390731128489274,
    -0.406736643075800,
    -0.422618261740699,
    -0.438371146789077,
    -0.453990499739547,
    -0.469471562785891,
    -0.484809620246337,
    -0.500000000000000,
    -0.515038074910054,
    -0.529919264233205,
    -0.544639035015027,
    -0.559192903470747,
    -0.573576436351046,
    -0.587785252292473,
    -0.601815023152048,
    -0.615661475325658,
    -0.629320391049838,
    -0.642787609686539,
    -0.656059028990507,
    -0.669130606358858,
    -0.681998360062499,
    -0.694658370458997,
    -0.707106781186548,
    -0.719339800338651,
    -0.731353701619171,
    -0.743144825477394,
    -0.754709580222772,
    -0.766044443118978,
    -0.777145961456971,
    -0.788010753606722,
    -0.798635510047293,
    -0.809016994374947,
    -0.819152044288992,
    -0.829037572555042,
    -0.838670567945424,
    -0.848048096156426,
    -0.857167300702112,
    -0.866025403784439,
    -0.874619707139396,
    -0.882947592858927,
    -0.891006524188368,
    -0.898794046299167,
    -0.906307787036650,
    -0.913545457642601,
    -0.920504853452440,
    -0.927183854566787,
    -0.933580426497202,
    -0.939692620785908,
    -0.945518575599317,
    -0.951056516295154,
    -0.956304755963036,
    -0.961261695938319,
    -0.965925826289068,
    -0.970295726275996,
    -0.974370064785235,
    -0.978147600733806,
    -0.981627183447664,
    -0.984807753012208,
    -0.987688340595138,
    -0.990268068741570,
    -0.992546151641322,
    -0.994521895368273,
    -0.996194698091746,
    -0.997564050259824,
    -0.998629534754574,
    -0.999390827019096,
    -0.999847695156391,
    -1.000000000000000,
    -0.999847695156391,
    -0.999390827019096,
    -0.998629534754574,
    -0.997564050259824,
    -0.996194698091746,
    -0.994521895368273,
    -0.992546151641322,
    -0.990268068741570,
    -0.987688340595138,
    -0.984807753012208,
    -0.981627183447664,
    -0.978147600733806,
    -0.974370064785235,
    -0.970295726275996,
    -0.965925826289068,
    -0.961261695938319,
    -0.956304755963035,
    -0.951056516295154,
    -0.945518575599317,
    -0.939692620785908,
    -0.933580426497202,
    -0.927183854566787,
    -0.920504853452440,
    -0.913545457642601,
    -0.906307787036650,
    -0.898794046299167,
    -0.891006524188368,
    -0.882947592858927,
    -0.874619707139396,
    -0.866025403784439,
    -0.857167300702112,
    -0.848048096156426,
    -0.838670567945424,
    -0.829037572555042,
    -0.819152044288992,
    -0.809016994374947,
    -0.798635510047293,
    -0.788010753606722,
    -0.777145961456971,
    -0.766044443118978,
    -0.754709580222772,
    -0.743144825477394,
    -0.731353701619170,
    -0.719339800338651,
    -0.707106781186547,
    -0.694658370458997,
    -0.681998360062498,
    -0.669130606358858,
    -0.656059028990507,
    -0.642787609686539,
    -0.629320391049837,
    -0.615661475325658,
    -0.601815023152048,
    -0.587785252292473,
    -0.573576436351046,
    -0.559192903470747,
    -0.544639035015027,
    -0.529919264233205,
    -0.515038074910054,
    -0.500000000000000,
    -0.484809620246337,
    -0.469471562785891,
    -0.453990499739547,
    -0.438371146789077,
    -0.422618261740699,
    -0.406736643075800,
    -0.390731128489274,
    -0.374606593415912,
    -0.358367949545300,
    -0.342020143325669,
    -0.325568154457157,
    -0.309016994374947,
    -0.292371704722737,
    -0.275637355816999,
    -0.258819045102521,
    -0.241921895599668,
    -0.224951054343865,
    -0.207911690817759,
    -0.190808995376545,
    -0.173648177666930,
    -0.156434465040231,
    -0.139173100960065,
    -0.121869343405147,
    -0.104528463267653,
    -0.087155742747658,
    -0.069756473744125,
    -0.052335956242944,
    -0.034899496702501,
    -0.017452406437284,
    0.000000000000000,
    0.017452406437284,
    0.034899496702501,
    0.052335956242944,
    0.069756473744125,
    0.087155742747658,
    0.104528463267653,
    0.121869343405147,
    0.139173100960065,
    0.156434465040231,
    0.173648177666930,
    0.190808995376545,
    0.207911690817759,
    0.224951054343865,
    0.241921895599668,
    0.258819045102521,
    0.275637355816999,
    0.292371704722737,
    0.309016994374947,
    0.325568154457157,
    0.342020143325669,
    0.358367949545300,
    0.374606593415912,
    0.390731128489274,
    0.406736643075800,
    0.422618261740699,
    0.438371146789077,
    0.453990499739547,
    0.469471562785891,
    0.484809620246337,
    0.500000000000000,
    0.515038074910054,
    0.529919264233205,
    0.544639035015027,
    0.559192903470747,
    0.573576436351046,
    0.587785252292473,
    0.601815023152048,
    0.615661475325658,
    0.629320391049837,
    0.642787609686539,
    0.656059028990507,
    0.669130606358858,
    0.681998360062498,
    0.694658370458997,
    0.707106781186547,
    0.719339800338651,
    0.731353701619170,
    0.743144825477394,
    0.754709580222772,
    0.766044443118978,
    0.777145961456971,
    0.788010753606722,
    0.798635510047293,
    0.809016994374947,
    0.819152044288992,
    0.829037572555042,
    0.838670567945424,
    0.848048096156426,
    0.857167300702112,
    0.866025403784439,
    0.874619707139396,
    0.882947592858927,
    0.891006524188368,
    0.898794046299167,
    0.906307787036650,
    0.913545457642601,
    0.920504853452440,
    0.927183854566787,
    0.933580426497202,
    0.939692620785908,
    0.945518575599317,
    0.951056516295154,
    0.956304755963035,
    0.961261695938319,
    0.965925826289068,
    0.970295726275996,
    0.974370064785235,
    0.978147600733806,
    0.981627183447664,
    0.984807753012208,
    0.987688340595138,
    0.990268068741570,
    0.992546151641322,
    0.994521895368273,
    0.996194698091746,
    0.997564050259824,
    0.998629534754574,
    0.999390827019096,
    0.999847695156391,
    1.000000000000000,
    0.999847695156391,
    0.999390827019096,
    0.998629534754574,
    0.997564050259824,
    0.996194698091746,
    0.994521895368273,
    0.992546151641322,
    0.990268068741570,
    0.987688340595138,
    0.984807753012208,
    0.981627183447664,
    0.978147600733806,
    0.974370064785235,
    0.970295726275996,
    0.965925826289068,
    0.961261695938319,
    0.956304755963036,
    0.951056516295154,
    0.945518575599317,
    0.939692620785908,
    0.933580426497202,
    0.927183854566787,
    0.920504853452440,
    0.913545457642601,
    0.906307787036650,
    0.898794046299167,
    0.891006524188368,
    0.882947592858927,
    0.874619707139396,
    0.866025403784439,
    0.857167300702112,
    0.848048096156426,
    0.838670567945424,
    0.829037572555042,
    0.819152044288992,
    0.809016994374947,
    0.798635510047293,
    0.788010753606722,
    0.777145961456971,
    0.766044443118978,
    0.754709580222772,
    0.743144825477394,
    0.731353701619171,
    0.719339800338651,
    0.707106781186548,
    0.694658370458997,
    0.681998360062499,
    0.669130606358858,
    0.656059028990507,
    0.642787609686539,
    0.629320391049838,
    0.615661475325658,
    0.601815023152048,
    0.587785252292473,
    0.573576436351046,
    0.559192903470747,
    0.544639035015027,
    0.529919264233205,
    0.515038074910054,
    0.500000000000000,
    0.484809620246337,
    0.469471562785891,
    0.453990499739547,
    0.438371146789077,
    0.422618261740699,
    0.406736643075800,
    0.390731128489274,
    0.374606593415912,
    0.358367949545300,
    0.342020143325669,
    0.325568154457157,
    0.309016994374948,
    0.292371704722737,
    0.275637355817000,
    0.258819045102521,
    0.241921895599668,
    0.224951054343865,
    0.207911690817759,
    0.190808995376545,
    0.173648177666930,
    0.156434465040231,
    0.139173100960066,
    0.121869343405148,
    0.104528463267654,
    0.087155742747659,
    0.069756473744126,
    0.052335956242944,
    0.034899496702501,
    0.017452406437283,
    0.000000000000000,
    -0.017452406437283,
    -0.034899496702501,
    -0.052335956242944,
    -0.069756473744125,
    -0.087155742747658,
    -0.104528463267653,
    -0.121869343405148,
    -0.139173100960066,
    -0.156434465040231,
    -0.173648177666930,
    -0.190808995376545,
    -0.207911690817759,
    -0.224951054343865,
    -0.241921895599668,
    -0.258819045102520,
    -0.275637355816999,
    -0.292371704722736,
    -0.309016994374948,
    -0.325568154457157,
    -0.342020143325669,
    -0.358367949545300,
    -0.374606593415912,
    -0.390731128489274,
    -0.406736643075800,
    -0.422618261740699,
    -0.438371146789077,
    -0.453990499739546,
    -0.469471562785891,
    -0.484809620246337,
    -0.500000000000000,
    -0.515038074910054,
    -0.529919264233205,
    -0.544639035015027,
    -0.559192903470747,
    -0.573576436351046,
    -0.587785252292473,
    -0.601815023152048,
    -0.615661475325658,
    -0.629320391049838,
    -0.642787609686539,
    -0.656059028990507,
    -0.669130606358858,
    -0.681998360062498,
    -0.694658370458997,
    -0.707106781186547,
    -0.719339800338651,
    -0.731353701619170,
    -0.743144825477394,
    -0.754709580222772,
    -0.766044443118978,
    -0.777145961456971,
    -0.788010753606722,
    -0.798635510047293,
    -0.809016994374947,
    -0.819152044288992,
    -0.829037572555041,
    -0.838670567945424,
    -0.848048096156426,
    -0.857167300702112,
    -0.866025403784438,
    -0.874619707139396,
    -0.882947592858927,
    -0.891006524188368,
    -0.898794046299167,
    -0.906307787036650,
    -0.913545457642601,
    -0.920504853452440,
    -0.927183854566787,
    -0.933580426497202,
    -0.939692620785908,
    -0.945518575599317,
    -0.951056516295154,
    -0.956304755963035,
    -0.961261695938319,
    -0.965925826289068,
    -0.970295726275996,
    -0.974370064785235,
    -0.978147600733806,
    -0.981627183447664,
    -0.984807753012208,
    -0.987688340595138,
    -0.990268068741570,
    -0.992546151641322,
    -0.994521895368273,
    -0.996194698091746,
    -0.997564050259824,
    -0.998629534754574,
    -0.999390827019096,
    -0.999847695156391,
    -1.000000000000000,
    -0.999847695156391,
    -0.999390827019096,
    -0.998629534754574,
    -0.997564050259824,
    -0.996194698091746,
    -0.994521895368273,
    -0.992546151641322,
    -0.990268068741570,
    -0.987688340595138,
    -0.984807753012208,
    -0.981627183447664,
    -0.978147600733806,
    -0.974370064785235,
    -0.970295726275997,
    -0.965925826289068,
    -0.961261695938319,
    -0.956304755963035,
    -0.951056516295154,
    -0.945518575599317,
    -0.939692620785909,
    -0.933580426497202,
    -0.927183854566787,
    -0.920504853452440,
    -0.913545457642601,
    -0.906307787036650,
    -0.898794046299167,
    -0.891006524188368,
    -0.882947592858927,
    -0.874619707139396,
    -0.866025403784439,
    -0.857167300702112,
    -0.848048096156426,
    -0.838670567945424,
    -0.829037572555042,
    -0.819152044288992,
    -0.809016994374948,
    -0.798635510047293,
    -0.788010753606722,
    -0.777145961456971,
    -0.766044443118978,
    -0.754709580222772,
    -0.743144825477395,
    -0.731353701619171,
    -0.719339800338652,
    -0.707106781186548,
    -0.694658370458998,
    -0.681998360062498,
    -0.669130606358858,
    -0.656059028990507,
    -0.642787609686540,
    -0.629320391049838,
    -0.615661475325659,
    -0.601815023152048,
    -0.587785252292473,
    -0.573576436351046,
    -0.559192903470747,
    -0.544639035015027,
    -0.529919264233206,
    -0.515038074910054,
    -0.500000000000000,
    -0.484809620246337,
    -0.469471562785891,
    -0.453990499739547,
    -0.438371146789077,
    -0.422618261740700,
    -0.406736643075800,
    -0.390731128489275,
    -0.374606593415912,
    -0.358367949545301,
    -0.342020143325669,
    -0.325568154457158,
    -0.309016994374948,
    -0.292371704722736,
    -0.275637355817000,
    -0.258819045102521,
    -0.241921895599668,
    -0.224951054343865,
    -0.207911690817760,
    -0.190808995376545,
    -0.173648177666931,
    -0.156434465040231,
    -0.139173100960066,
    -0.121869343405148,
    -0.104528463267653,
    -0.087155742747658,
    -0.069756473744125,
    -0.052335956242944,
    -0.034899496702501,
    -0.017452406437284,
    0.000000000000000);


    arccos_value : array[-360..360] of double= {arccos(x*360}
   (3.141592653589790,
    3.067039789936430,
    3.036134536567890,
    3.012403387807610,
    2.992383079984640,
    2.974732480368560,
    2.958763936845700,
    2.944069046669290,
    2.930381773230620,
    2.917517368287970,
    2.905341347605020,
    2.893752208747370,
    2.882671111583570,
    2.872035372220060,
    2.861794177662760,
    2.851905659592670,
    2.842334834870760,
    2.833052118262100,
    2.824032224298270,
    2.815253340639700,
    2.806696495150410,
    2.798345063938780,
    2.790184383794560,
    2.782201443161720,
    2.774384633031960,
    2.766723544143840,
    2.759208800383920,
    2.751831920792320,
    2.744585204390660,
    2.737461633382580,
    2.730454791267450,
    2.723558793152050,
    2.716768226110900,
    2.710078097879170,
    2.703483792498300,
    2.696981031796640,
    2.690565841793530,
    2.684234523279060,
    2.677983625952330,
    2.671809925605920,
    2.665710403929380,
    2.659682230573360,
    2.653722747172820,
    2.647829453073890,
    2.641999992547640,
    2.636232143305640,
    2.630523806159070,
    2.624872995685200,
    2.619277831783740,
    2.613736532021830,
    2.608247404679140,
    2.602808842416730,
    2.597419316502430,
    2.592077371534140,
    2.586781620609720,
    2.581530740897970,
    2.576323469570800,
    2.571158600061290,
    2.566034978616250,
    2.560951501115420,
    2.555907110132640,
    2.550900792216710,
    2.545931575372410,
    2.540998526723740,
    2.536100750343780,
    2.531237385236630,
    2.526407603458750,
    2.521610608368180,
    2.516845632990930,
    2.512111938495350,
    2.507408812765750,
    2.502735569067480,
    2.498091544796510,
    2.493476100306960,
    2.488888617810790,
    2.484328500344280,
    2.479795170796360,
    2.475288070994450,
    2.470806660843580,
    2.466350417515100,
    2.461918834681550,
    2.457511421794460,
    2.453127703402300,
    2.448767218505680,
    2.444429519947560,
    2.440114173836070,
    2.435820758997780,
    2.431548866459630,
    2.427298098957550,
    2.423068070470220,
    2.418858405776380,
    2.414668740034220,
    2.410498718381590,
    2.406347995555660,
    2.402216235531100,
    2.398103111175430,
    2.394008303920770,
    2.389931503450910,
    2.385872407402940,
    2.381830721082480,
    2.377806157191960,
    2.373798435571030,
    2.369807282948550,
    2.365832432705510,
    2.361873624648350,
    2.357930604792000,
    2.354003125152250,
    2.350090943546980,
    2.346193823405650,
    2.342311533586770,
    2.338443848202930,
    2.334590546452930,
    2.330751412460740,
    2.326926235120950,
    2.323114807950280,
    2.319316928945100,
    2.315532400444350,
    2.311761028997920,
    2.308002625240000,
    2.304257003767300,
    2.300523983021860,
    2.296803385178250,
    2.293095036034950,
    2.289398764909780,
    2.285714404539110,
    2.282041790980740,
    2.278380763520250,
    2.274731164580780,
    2.271092839635860,
    2.267465637125470,
    2.263849408374870,
    2.260244007516350,
    2.256649291413610,
    2.253065119588740,
    2.249491354151660,
    2.245927859731930,
    2.242374503412810,
    2.238831154667560,
    2.235297685297760,
    2.231773969373670,
    2.228259883176540,
    2.224755305142740,
    2.221260115809690,
    2.217774197763490,
    2.214297435588180,
    2.210829715816660,
    2.207370926883040,
    2.203920959076470,
    2.200479704496480,
    2.197047057009500,
    2.193622912206900,
    2.190207167364090,
    2.186799721400980,
    2.183400474843520,
    2.180009329786440,
    2.176626189857010,
    2.173250960179890,
    2.169883547342980,
    2.166523859364260,
    2.163171805659540,
    2.159827297011170,
    2.156490245537570,
    2.153160564663640,
    2.149838169092020,
    2.146522974775090,
    2.143214898887720,
    2.139913859800850,
    2.136619777055720,
    2.133332571338750,
    2.130052164457220,
    2.126778479315440,
    2.123511439891680,
    2.120250971215620,
    2.116996999346430,
    2.113749451351400,
    2.110508255285100,
    2.107273340169150,
    2.104044635972380,
    2.100822073591640,
    2.097605584832940,
    2.094395102393200,
    2.091190559842330,
    2.087991891605870,
    2.084799032947960,
    2.081611919954750,
    2.078430489518280,
    2.075254679320630,
    2.072084427818580,
    2.068919674228520,
    2.065760358511790,
    2.062606421360340,
    2.059457804182740,
    2.056314449090490,
    2.053176298884680,
    2.050043297042940,
    2.046915387706690,
    2.043792515668670,
    2.040674626360790,
    2.037561665842190,
    2.034453580787660,
    2.031350318476220,
    2.028251826780010,
    2.025158054153420,
    2.022068949622460,
    2.018984462774330,
    2.015904543747240,
    2.012829143220490,
    2.009758212404660,
    2.006691703032120,
    2.003629567347680,
    2.000571758099420,
    1.997518228529810,
    1.994468932366870,
    1.991423823815630,
    1.988382857549740,
    1.985345988703220,
    1.982313172862380,
    1.979284366057980,
    1.976259524757410,
    1.973238605857200,
    1.970221566675490,
    1.967208364944830,
    1.964198958804990,
    1.961193306795970,
    1.958191367851150,
    1.955193101290540,
    1.952198466814180,
    1.949207424495700,
    1.946219934775940,
    1.943235958456690,
    1.940255456694670,
    1.937278390995420,
    1.934304723207530,
    1.931334415516750,
    1.928367430440410,
    1.925403730821810,
    1.922443279824770,
    1.919486040928270,
    1.916531977921160,
    1.913581054897010,
    1.910633236249020,
    1.907688486665020,
    1.904746771122580,
    1.901808054884190,
    1.898872303492530,
    1.895939482765790,
    1.893009558793140,
    1.890082497930200,
    1.887158266794650,
    1.884236832261870,
    1.881318161460660,
    1.878402221769090,
    1.875488980810290,
    1.872578406448470,
    1.869670466784860,
    1.866765130153830,
    1.863862365118970,
    1.860962140469340,
    1.858064425215690,
    1.855169188586770,
    1.852276400025740,
    1.849386029186550,
    1.846498045930450,
    1.843612420322530,
    1.840729122628300,
    1.837848123310350,
    1.834969393025010,
    1.832092902619120,
    1.829218623126810,
    1.826346525766340,
    1.823476581936980,
    1.820608763215930,
    1.817743041355330,
    1.814879388279210,
    1.812017776080620,
    1.809158177018670,
    1.806300563515700,
    1.803444908154440,
    1.800591183675270,
    1.797739362973420,
    1.794889419096270,
    1.792041325240710,
    1.789195054750500,
    1.786350581113610,
    1.783507877959710,
    1.780666919057630,
    1.777827678312830,
    1.774990129764910,
    1.772154247585230,
    1.769320006074440,
    1.766487379660140,
    1.763656342894470,
    1.760826870451850,
    1.757998937126640,
    1.755172517830860,
    1.752347587591980,
    1.749524121550670,
    1.746702094958610,
    1.743881483176340,
    1.741062261671060,
    1.738244406014590,
    1.735427891881160,
    1.732612695045450,
    1.729798791380410,
    1.726986156855340,
    1.724174767533790,
    1.721364599571580,
    1.718555629214870,
    1.715747832798130,
    1.712941186742270,
    1.710135667552670,
    1.707331251817300,
    1.704527916204840,
    1.701725637462780,
    1.698924392415620,
    1.696124157962960,
    1.693324911077760,
    1.690526628804470,
    1.687729288257270,
    1.684932866618300,
    1.682137341135860,
    1.679342689122700,
    1.676548887954260,
    1.673755915066950,
    1.670963747956460,
    1.668172364176010,
    1.665381741334740,
    1.662591857095930,
    1.659802689175440,
    1.657014215339990,
    1.654226413405510,
    1.651439261235560,
    1.648652736739640,
    1.645866817871610,
    1.643081482628090,
    1.640296709046830,
    1.637512475205120,
    1.634728759218250,
    1.631945539237870,
    1.629162793450470,
    1.626380500075810,
    1.623598637365340,
    1.620817183600670,
    1.618036117092010,
    1.615255416176670,
    1.612475059217470,
    1.609695024601280,
    1.606915290737420,
    1.604135836056200,
    1.601356639007390,
    1.598577678058690,
    1.595798931694260,
    1.593020378413160,
    1.590241996727920,
    1.587463765162970,
    1.584685662253190,
    1.581907666542400,
    1.579129756581860,
    1.576351910928810,
    1.573574108144930,
    1.570796326794900,
    1.568018545444860,
    1.565240742660980,
    1.562462897007930,
    1.559684987047400,
    1.556906991336610,
    1.554128888426820,
    1.551350656861870,
    1.548572275176630,
    1.545793721895540,
    1.543014975531100,
    1.540236014582410,
    1.537456817533590,
    1.534677362852380,
    1.531897628988510,
    1.529117594372320,
    1.526337237413130,
    1.523556536497780,
    1.520775469989130,
    1.517994016224450,
    1.515212153513980,
    1.512429860139320,
    1.509647114351920,
    1.506863894371550,
    1.504080178384670,
    1.501295944542960,
    1.498511170961700,
    1.495725835718180,
    1.492939916850160,
    1.490153392354240,
    1.487366240184280,
    1.484578438249810,
    1.481789964414350,
    1.479000796493860,
    1.476210912255060,
    1.473420289413780,
    1.470628905633340,
    1.467836738522840,
    1.465043765635540,
    1.462249964467090,
    1.459455312453930,
    1.456659786971490,
    1.453863365332520,
    1.451066024785320,
    1.448267742512030,
    1.445468495626830,
    1.442668261174180,
    1.439867016127010,
    1.437064737384950,
    1.434261401772490,
    1.431456986037130,
    1.428651466847530,
    1.425844820791660,
    1.423037024374930,
    1.420228054018210,
    1.417417886056000,
    1.414606496734450,
    1.411793862209380,
    1.408979958544350,
    1.406164761708630,
    1.403348247575210,
    1.400530391918730,
    1.397711170413460,
    1.394890558631180,
    1.392068532039120,
    1.389245065997810,
    1.386420135758930,
    1.383593716463150,
    1.380765783137940,
    1.377936310695320,
    1.375105273929660,
    1.372272647515350,
    1.369438406004570,
    1.366602523824890,
    1.363764975276970,
    1.360925734532160,
    1.358084775630080,
    1.355242072476190,
    1.352397598839300,
    1.349551328349080,
    1.346703234493530,
    1.343853290616380,
    1.341001469914520,
    1.338147745435350,
    1.335292090074100,
    1.332434476571120,
    1.329574877509170,
    1.326713265310580,
    1.323849612234460,
    1.320983890373860,
    1.318116071652820,
    1.315246127823460,
    1.312374030462990,
    1.309499750970680,
    1.306623260564790,
    1.303744530279450,
    1.300863530961490,
    1.297980233267270,
    1.295094607659350,
    1.292206624403250,
    1.289316253564050,
    1.286423465003020,
    1.283528228374100,
    1.280630513120450,
    1.277730288470820,
    1.274827523435970,
    1.271922186804930,
    1.269014247141320,
    1.266103672779500,
    1.263190431820700,
    1.260274492129130,
    1.257355821327930,
    1.254434386795150,
    1.251510155659600,
    1.248583094796660,
    1.245653170824010,
    1.242720350097270,
    1.239784598705600,
    1.236845882467210,
    1.233904166924780,
    1.230959417340770,
    1.228011598692780,
    1.225060675668630,
    1.222106612661520,
    1.219149373765020,
    1.216188922767980,
    1.213225223149390,
    1.210258238073050,
    1.207287930382270,
    1.204314262594370,
    1.201337196895130,
    1.198356695133100,
    1.195372718813860,
    1.192385229094090,
    1.189394186775610,
    1.186399552299260,
    1.183401285738640,
    1.180399346793820,
    1.177393694784800,
    1.174384288644960,
    1.171371086914300,
    1.168354047732600,
    1.165333128832380,
    1.162308287531810,
    1.159279480727410,
    1.156246664886570,
    1.153209796040050,
    1.150168829774160,
    1.147123721222930,
    1.144074425059980,
    1.141020895490370,
    1.137963086242120,
    1.134900950557670,
    1.131834441185140,
    1.128763510369310,
    1.125688109842550,
    1.122608190815470,
    1.119523703967330,
    1.116434599436370,
    1.113340826809780,
    1.110242335113570,
    1.107139072802130,
    1.104030987747600,
    1.100918027229000,
    1.097800137921120,
    1.094677265883100,
    1.091549356546850,
    1.088416354705110,
    1.085278204499310,
    1.082134849407060,
    1.078986232229450,
    1.075832295078000,
    1.072672979361270,
    1.069508225771210,
    1.066337974269160,
    1.063162164071520,
    1.059980733635040,
    1.056793620641840,
    1.053600761983920,
    1.050402093747460,
    1.047197551196600,
    1.043987068756850,
    1.040770579998160,
    1.037548017617410,
    1.034319313420650,
    1.031084398304690,
    1.027843202238390,
    1.024595654243360,
    1.021341682374170,
    1.018081213698110,
    1.014814174274350,
    1.011540489132580,
    1.008260082251040,
    1.004972876534080,
    1.001678793788940,
    0.998377754702076,
    0.995069678814707,
    0.991754484497769,
    0.988432088926153,
    0.985102408052228,
    0.981765356578623,
    0.978420847930251,
    0.975068794225535,
    0.971709106246815,
    0.968341693409906,
    0.964966463732784,
    0.961583323803353,
    0.958192178746274,
    0.954792932188818,
    0.951385486225704,
    0.947969741382894,
    0.944545596580291,
    0.941112949093317,
    0.937671694513319,
    0.934221726706755,
    0.930762937773129,
    0.927295218001612,
    0.923818455826307,
    0.920332537780100,
    0.916837348447050,
    0.913332770413253,
    0.909818684216125,
    0.906294968292035,
    0.902761498922231,
    0.899218150176981,
    0.895664793857865,
    0.892101299438132,
    0.888527534001054,
    0.884943362176186,
    0.881348646073446,
    0.877743245214924,
    0.874127016464323,
    0.870499813953931,
    0.866861489009017,
    0.863211890069541,
    0.859550862609055,
    0.855878249050678,
    0.852193888680009,
    0.848497617554843,
    0.844789268411544,
    0.841068670567930,
    0.837335649822492,
    0.833590028349795,
    0.829831624591877,
    0.826060253145445,
    0.822275724644695,
    0.818477845639511,
    0.814666418468847,
    0.810841241129051,
    0.807002107136867,
    0.803148805386866,
    0.799281120003024,
    0.795398830184143,
    0.791501710042809,
    0.787589528437541,
    0.783662048797798,
    0.779719028941443,
    0.775760220884283,
    0.771785370641247,
    0.767794218018762,
    0.763786496397831,
    0.759761932507315,
    0.755720246186857,
    0.751661150138878,
    0.747584349669021,
    0.743489542414359,
    0.739376418058690,
    0.735244658034130,
    0.731093935208205,
    0.726923913555569,
    0.722734247813416,
    0.718524583119577,
    0.714294554632247,
    0.710043787130162,
    0.705771894592009,
    0.701478479753722,
    0.697163133642232,
    0.692825435084118,
    0.688464950187494,
    0.684081231795329,
    0.679673818908244,
    0.675242236074688,
    0.670785992746209,
    0.666304582595341,
    0.661797482793435,
    0.657264153245516,
    0.652704035779002,
    0.648116553282835,
    0.643501108793284,
    0.638857084522312,
    0.634183840824041,
    0.629480715094439,
    0.624747020598864,
    0.619982045221614,
    0.615185050131041,
    0.610355268353166,
    0.605491903246009,
    0.600594126866051,
    0.595661078217387,
    0.590691861373079,
    0.585685543457151,
    0.580641152474369,
    0.575557674973547,
    0.570434053528507,
    0.565269184018999,
    0.560061912691825,
    0.554811032980072,
    0.549515282055655,
    0.544173337087366,
    0.538783811173059,
    0.533345248910654,
    0.527856121567966,
    0.522314821806048,
    0.516719657904595,
    0.511068847430719,
    0.505360510284157,
    0.499592661042154,
    0.493763200515900,
    0.487869906416976,
    0.481910423016436,
    0.475882249660417,
    0.469782727983871,
    0.463609027637463,
    0.457358130310730,
    0.451026811796262,
    0.444611621793151,
    0.438108861091492,
    0.431514555710622,
    0.424824427478889,
    0.418033860437745,
    0.411137862322348,
    0.404131020207208,
    0.397007449199134,
    0.389760732797475,
    0.382383853205875,
    0.374869109445956,
    0.367208020557837,
    0.359391210428068,
    0.351408269795229,
    0.343247589651013,
    0.334896158439379,
    0.326339312950097,
    0.317560429291522,
    0.308540535327688,
    0.299257818719035,
    0.289686993997119,
    0.279798475927034,
    0.269557281369737,
    0.258921542006221,
    0.247840444842424,
    0.236251305984770,
    0.224075285301819,
    0.211210880359178,
    0.197523606920508,
    0.182828716744095,
    0.166860173221230,
    0.149209573605148,
    0.129189265782185,
    0.105458117021900,
    0.074552863653361,
    0.000000000000000);{arccos(x*360)}


const
   record_size:integer=11;{default}
var
  p11       : ^hnskyhdr290_11;	    { pointer to hns0kyrecord }
  p10       : ^hnskyhdr290_10;	    { pointer to hns0kyrecord }
  p9        : ^hnskyhdr290_9;	    { pointer to hns0kyrecord }
  p6        : ^hnskyhdr290_6;       { pointer to hns0kyrecord }
  p5        : ^hnskyhdr290_5;       { pointer to hns0kyrecord }
  dec9_storage: shortint;

  area290:integer;           {290 files, should be set at 290+1 for before any read series}
  buf2: array[1..11] of byte;  {read buffer stars}
  thefile_stars      : tfilestream;
  Reader_stars       : TReader;


procedure ang_sep_fast(ra1,dec1,ra2,dec2 : double;var sep: double); inline;{version 2020-12-30. Calculates angular separation fast using the rigorous method but with approximate cos and sin values from tables. According formula 9.1 old Meeus or 16.1 new Meeus}
var
  sin_dec1,cos_dec1,sin_dec2,cos_dec2, cos_sep:double;
  dec1_d, dec2_d : integer;
begin
  dec1_d:=round(dec1*180/pi); {radians to rounded degrees}
  dec2_d:=round(dec2*180/pi);

  sin_dec1:=sin_value[dec1_d];
  cos_dec1:=cos_value[dec1_d];
  sin_dec2:=sin_value[dec2_d];
  cos_dec2:=cos_value[dec2_d];

  cos_sep:=sin_dec1*sin_dec2+ cos_dec1*cos_dec2*cos(ra1-ra2);
  sep:=arccos_value[round(cos_sep*360)];
end;


procedure reset290index;{call this procedure before start reading from the 290 files}
begin
   area290:=290+1;
end;

procedure closedatabase;
begin
  if file_open=2 then
  begin
    Reader_stars.free;
    thefile_stars.free;
    end;
  file_open:=0;
end;

// searchmode [S,T] specify S = screen update within FOV or T for full (designation text) database access.
// telescope_ra, telescope_dec [radians], contains to center position of the field of interest
// field_diameter [radians], FOV diameter of field of interest. This is ignored in searchmode=T}
// ra, dec [radians],   reported star position
// mag2 [magnitude*10]  reported star magnitude
// Bp_Rp, Gaia (Bp-Rp)*10, only for G16 database. If no info available in Gaia, the value is set at -128 (-12.8*10)}
// result [true/false]  if reported true then more stars are available. If false no more stars available.
// extra outputs:
//          naam2,  string containing the star Tycho/UCAC4 designation for record size above 7
//          database2  : array[0..(11*10)] of ansichar;{text info star database used}
// preconditions:
//   procedure reset290index should be called before any read.
//   maxmag [magnitude*10], double variable which specifies the maximum magnitude to be read. This is typical used in HNSKY if a star designation needs to be reported after a mouse click on it
function readdatabase290(searchmode:char; telescope_ra,telescope_dec, field_diameter:double; var ra2,dec2, mag2, Bp_Rp : double): boolean;{star 290 file database search}
            {searchmode=S screen update }
            {searchmode=M mouse click  search}
            {searchmode=T text search}
  var
    nr_regio, nr_star,ra_raw,nr32store : integer;
    name_regio, naamst       : string; //array [0..7] of ansichar;
    delta_ra, sep, required_range  : double;
    nearbyarea,header_record,in_sight: boolean;
begin
   {$I-}
  readdatabase290:=true;
  repeat
    if  ( (file_open=0) or {file_open otherwise sometimes the file routine get stucked}
          (nr_records<=0) or {here otherwise star at 0:0}
          ((searchmode<>'T') and (mag2>maxmag))
         ) then
      begin {einde}
         if file_open<>0 then closedatabase;
         nearbyarea:=false;
         naam2:=''; {clear for 5, 6 and 7 bytes records to prevent ghost names}
         Bp_Rp:=-128;{assume no colour information is available or set to -128 for G17, G18 databases}

         required_range:=max(field_diameter/2, 5.95 *pi/180);{Longest distance to a corner or center of a tile. Worst place is ra=0, dec 18.8 degrees}

         while ((area290>1) and (nearbyarea=false)) do
         begin
           dec(area290);
           if searchmode='T' then nearbyarea:=true
           else
           begin {check if area is visible using center position tile}
             ang_sep_fast(telescope_ra,telescope_dec,centers290[area290,1],centers290[area290,2], sep );
             if sep<required_range then  nearbyarea:=true
             else
             if sep<required_range+15*pi/180 then {center close enough to check the corners}
             begin {check if area is visible using corner position tile}
               ang_sep_fast(telescope_ra,telescope_dec,centers290[area290,3],centers290[area290,5], sep );
               if sep<required_range then  nearbyarea:=true
               else
               begin {check if area is visible using corner position tile}
                 ang_sep_fast(telescope_ra,telescope_dec,centers290[area290,4],centers290[area290,5], sep );
                 if sep<required_range then  nearbyarea:=true
                 else
                 begin  {check if area is visible using corner position tile}
                   ang_sep_fast(telescope_ra,telescope_dec,centers290[area290,3],centers290[area290,6], sep );
                   if sep<required_range then  nearbyarea:=true
                   else
                   begin  {check if area is visible using corner position tile}
                     ang_sep_fast(telescope_ra,telescope_dec,centers290[area290,4],centers290[area290,6], sep );
                     if sep<required_range then  nearbyarea:=true
                   end;
                 end;
               end;
             end;
           end;
         end; {while}

         if nearbyarea=false then begin
           readdatabase290:=false; exit; end;

         name_star:=copy(name_star,1,3)+'_'+filenames290[area290];{tyc0101.290}
         try
           thefile_stars:=tfilestream.Create( catalog_path+name_star, fmOpenRead );
           Reader_stars := TReader.Create (thefile_stars, 5*6*9*11);{number of hnsky records, multiply off all posible record sizes}
           {thefile_stars.size-reader.position>sizeof(hkyhdr) could also be used but slow down a factor of 2 !!!}
           files_available:=true;
         except
            readdatabase290:=false;
            files_available:=false;
            exit;
         end;
         file_open:=2; {buffer size is .. x 1024}
         reader_stars.read(database2,110); {read header info, 10x11 is 110 bytes}
         if database2[109]=' ' then record_size:=11 {default}
         else
         record_size:=ord(database2[109]);{5,6,7,9,10 or 11 bytes record}

         nr_records:= trunc((thefile_stars.size-110)/record_size);{110 header size, correct for above read}

         mag2:=0;{temporary fix 2019-8-18. Remove in 2021 after release DR3 based database files}
      end;{einde}

    reader_stars.read(buf2,record_size);
    header_record:=false;

    case record_size of
    5: begin {record size 5}
         with p5^ do
         begin
           ra_raw:=(ra7 + ra8 shl 8 +ra9 shl 16);{always required, fasted method}
           if ((ra_raw=$FFFFFF) and {special magnitude record is found}
               ((mag2<150) or ((dec8-16)-mag2>=0)) ) {temporary fix 2019-8-18. Remove in 2021 after release DR3 based database files. Fix for area 205 with some faint star positions wrongly with ra=2*pi=$FFFFFF rather then $000000. Around location ra=0, dec=20 degrees}
           then
           begin
             mag2:=dec8-16;{new magn shifted 16 to make sirius and other positive}
             {magnitude is stored in mag2 till new magnitude record is found}
             dec9_storage:=dec7-128;{recover dec9 shortint and put it in storage}
            header_record:=true;
           end
           else
           begin {normal record without magnitude}
             ra2:= ra_raw*(pi*2  /((256*256*256)-1));
             dec2:=((dec9_storage shl 16)+(dec8 shl 8)+dec7)*(pi*0.5/((128*256*256)-1));// dec2:=(dec7+(dec8 shl 8)+(dec9 shl 16))*(pi*0.5/((128*256*256)-1)); {FPC compiler makes mistake, but dec7 behind}
             {The RA is stored as a 3 bytes word. The DEC position is stored as a two's complement (=standard), three bytes integer. The resolution of this three byte storage will be for RA: 360*60*60/((256*256*256)-1) = 0.077 arc seconds. For the DEC value it will be: 90*60*60/((128*256*256)-1) = 0.039 arc seconds.}
           end;
         end;
       end;{record size 5}
    6: begin {record size 6, new format 2018-5-31}
          with p6^ do
          begin
            ra_raw:=(ra7 + ra8 shl 8 +ra9 shl 16);{always required, fasted method}
            if ((ra_raw=$FFFFFF) and {special magnitude record is found}
                ((mag2<150) or ((dec8-16)-mag2>=0)) ) {temporary fix 2019-8-18. Remove in 2021 after release DR3 based database files. Fix for area 205 with some faint star positions wrongly with ra=2*pi=$FFFFFF rather then $000000. Around location ra=0, dec=20 degrees}
            then
            begin
              mag2:=dec8-16;{new magn shifted 16 to make sirius and other positive}
              {magnitude is stored in mag2 till new magnitude record is found}
              dec9_storage:=dec7-128;{recover dec9 shortint and put it in storage}
             header_record:=true;
            end
            else
            begin {normal record without magnitude}
              ra2:= ra_raw*(pi*2  /((256*256*256)-1));
              dec2:=((dec9_storage shl 16)+(dec8 shl 8)+dec7)*(pi*0.5/((128*256*256)-1));// dec2:=(dec7+(dec8 shl 8)+(dec9 shl 16))*(pi*0.5/((128*256*256)-1)); {FPC compiler makes mistake, but dec7 behind}
            end;
            Bp_Rp:=b_r;{gaia (Bp-Rp)*10, if no info in Gaia, the value is set-128}
          end;
        end;{record size 6}
    9: begin {record size 9}
          with p9^ do
          begin
            ra_raw:=(ra7 + ra8 shl 8 +ra9 shl 16);{always required, fasted method}
            if ra_raw=$FFFFFF  then  {special magnitude record is found}
            begin
              mag2:=dec8-16;{new magn shifted 16 to make sirius and other positive}
              {magnitude is stored in mag2 till new magnitude record is found}
              dec9_storage:=dec7-128;{recover dec9 shortint and put it in storage}
              header_record:=true;{not a star but a header with values for magnitude and dec9 for the next record}
            end
            else
            begin {normal record without magnitude}
              nr32store:=nr32;{store for later}
              ra2:= ra_raw*(pi*2  /((256*256*256)-1));
              dec2:=((dec9_storage shl 16)+(dec8 shl 8)+dec7)*(pi*0.5/((128*256*256)-1));// dec2:=(dec7+(dec8 shl 8)+(dec9 shl 16))*(pi*0.5/((128*256*256)-1)); {FPC compiler makes mistake, put dec7 behind}
              {The RA is stored as a 3 bytes word. The DEC position is stored as a two's complement (=standard), three bytes integer. The resolution of this three byte storage will be for RA: 360*60*60/((256*256*256)-1) = 0.077 arc seconds. For the DEC value it will be: 90*60*60/((128*256*256)-1) = 0.039 arc seconds.}
            end;{normal record without magnitude}
          end;{with P9^}
        end; {record size 9}

    10: begin {record size 10}
          with p10^ do
          begin
            ra_raw:=(ra7 + ra8 shl 8 +ra9 shl 16);{always required, fasted method}
            if ra_raw=$FFFFFF  then  {special magnitude record is found}
            begin
              if dec9>-20 then mag2:=dec9 else  mag2:=256+dec9;{new magn 12.8 is -12.8, 12.9 = -12.7}
             {magnitude is stored in mag2 till new magnitude record is found}
             header_record:=true;
            end
            else
            begin {normal record without magnitude}
              nr32store:=nr32;{store for later}
              ra2:= ra_raw*(pi*2  /((256*256*256)-1));
              dec2:=((dec9 shl 16)+(dec8 shl 8)+dec7)*(pi*0.5/((128*256*256)-1));// dec2:=(dec7+(dec8 shl 8)+(dec9 shl 16))*(pi*0.5/((128*256*256)-1)); {FPC compiler makes mistake, put dec7 behind}
            end;{normal record without magnitude}
          end;{with P10^}
        end; {record size 10}
   11: begin {record size 11}
         with p11^ do
         begin
           nr32store:=nr32;{store for later}
           ra2:= (ra7 + ra8 shl 8 +ra9 shl 16)*(pi*2  /((256*256*256)-1));
           dec2:=((dec9 shl 16)+(dec8 shl 8)+dec7)*(pi*0.5/((128*256*256)-1));// dec2:=(dec7+(dec8 shl 8)+(dec9 shl 16))*(pi*0.5/((128*256*256)-1)); {FPC compiler makes mistake, put dec7 behind}
           if mag0>-20 then mag2:=mag0 else  mag2:=256+mag0;{new magn 12.8 is -12.8, 12.9 = -12.7}
         end;{with P11^}
       end; {record size 11}
    end;{case}

    dec(nr_records); {faster then  (thefile_stars.size-thefile_stars.position<sizeofhnskyhdr) !!!)}

    delta_ra:=abs(ra2-telescope_ra); if delta_ra>pi then delta_ra:=pi*2-delta_ra;
    if delta_ra>pi/3 then
    begin  {far away in ra}
      ang_sep_fast(telescope_ra,telescope_dec,ra2,dec2, sep );{calculate seperation using rigorous method but with approximate cos and sin and cos values from tables}
      in_sight:=sep<(field_diameter * 1.5/2);{star in sight?}
    end
    else
    begin {nearby in ra}
      sep:=(sqr( delta_ra*cos_value[round(dec2*180/pi)] ) + sqr(dec2-telescope_dec));{calculate seperation using approximate method for shorter distances}
      in_sight:=sep<sqr(field_diameter * 1.5/2); {{star in sight?  sqr(field_diameter) is faster then sqrt(seperation)}
    end;
  until (
   {$ifdef mswindows}
   //(getinputstate=true) or
   {$ELSE} {}
   {$endif}
   ( (header_record=false) and ((searchmode='T') or  (in_sight)) )); {text search or in_sight, skip when too far from centre screen and go to next line}
   {searchmode=T text search}

  {name stars}
  if record_size>7 then {record contains naam/designation}
  begin
    if nr32store>0 then {ucac4 .290 style}
    begin
      {Designation: The star designation is stored in 32 bit integer named NR290. If the NR290 integer is positive, it contains an UCAC4 number. For UCAC4 the star zone is added as a multiply of $100000.  This allows $800 or 2048 zones and  $100000 or 1.048.576 stars. The UCAC4 contains maximum 286.833 stars in a zone and has 900 zones.}
      nr_regio:=(nr32store and $FFF00000) shr 20;{every 00 is 8 bits, so 5 zeros is 20 bits shift}
      nr_star:= (nr32store and $000FFFFF);  {zone is multiply of $100000, maximum nr of UCAC4 stars in a zone is 286.833 This allow 1.048.576 stars in a zone and 4096 zones using a cardinal or 2024 zones  using an integer (Tycho .290 is using negative numbers)}
      str(nr_regio,name_regio);
      str(nr_star+1000000:7,naamst);{add zeros by 1000000 and later remove 1, faster then formatfloat}
      naam2:=name_regio+'-'+naamst[1]+naamst[2]+naamst[3]+naamst[4]+naamst[5]+naamst[6];{naamst[0]contains the "1" and skip this one}
    end
    else
    begin {tycho style}
      {In case the NR290 integer is negative, the integer contains the Tycho/GSC label. After making the integer positive, the regional star number is stored in the lowest 2 bytes, the GSC/Tycho star region (1..9537) is stored in the highest 2 bytes except that if bit $40000000 is true, the Tycho specific extension is 2, else the Tycho extension is 1. The highest bit of star number at $00008000 is used for the Tycho-2 extension 3.}
      nr_regio:=((-nr32store) and $3FFF0000) shr 16;
      nr_star:=(-nr32store) and $7FFF;
      str(nr_regio,name_regio);
      str(nr_star,naamst);
      naam2:=name_regio+'-'+naamst;
      if (((-nr32store) and $40008000)>0) then  {tycho extensions}
      begin
        if (((-nr32store) and $40000000)>0) then
         naam2:=naam2+'-2' {tycho-2 extension}
        else
         naam2:=naam2+'-3'; {tycho-2 extension}
      end;
    end;
  end; {record_size>7}
end;

begin
  p11:= @buf2[1];	{ set pointer }
  p10:= @buf2[1];	{ set pointer }
  p9:= @buf2[1];	{ set pointer }
  p6:= @buf2[1];	{ set pointer }
  p5:= @buf2[1];	{ set pointer }
end.

